<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Java - Basic Syntax</title>
      <link href="/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Basic%20Syntax/"/>
      <url>/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Basic%20Syntax/</url>
      
        <content type="html"><![CDATA[<h2 id="Java-File-amp-Class"><a href="#Java-File-amp-Class" class="headerlink" title="Java File &amp; Class"></a>Java File &amp; Class</h2><ul><li>Java 檔案的名子必須與 <code>public class</code> 的名子相同</li><li><code>public class Main</code> 的檔案名稱應該要是 <code>Main.java</code></li><li>一個檔案只有一個唯一的 <code>public class</code></li></ul><h2 id="JVM-進入點"><a href="#JVM-進入點" class="headerlink" title="JVM 進入點"></a>JVM 進入點</h2><p><code>public static void main(String[] args)</code>，則是 JVM 的進入點，必須要有這個 function 才能夠執行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Hello,World"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基礎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Function &amp; Lambda Calculus &amp; Closure</title>
      <link href="/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/programming-language/Function%20&amp;%20Lambda%20Calculus%20&amp;%20Closure/"/>
      <url>/%E7%A8%8B%E5%BC%8F%E8%AA%9E%E8%A8%80/programming-language/Function%20&amp;%20Lambda%20Calculus%20&amp;%20Closure/</url>
      
        <content type="html"><![CDATA[<h2 id="Function"><a href="#Function" class="headerlink" title="Function"></a>Function</h2><blockquote><p>f(x) = y<br>x 為輸入；y 為輸出</p></blockquote><ul><li>一個 function 一定會有個輸入（argument），並且一定會有個輸出（回傳值）</li><li>一個 function 只對收到的參數進行操作</li><li>給予一個固定的輸入，一定會對應一個固定的輸出</li></ul><h2 id="Referential-transparency"><a href="#Referential-transparency" class="headerlink" title="Referential transparency"></a>Referential transparency</h2><p>概念為：「function 不應該改變外在環境的變數」。</p><p>如下面的例子就不符合該概念。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> externalVariable <span class="token operator">=</span> <span class="token string">'yeah'</span><span class="token keyword">let</span> <span class="token function-variable function">fn</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> externalVariable <span class="token operator">=</span> <span class="token string">'no'</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="Function-with-thread"><a href="#Function-with-thread" class="headerlink" title="Function with thread"></a>Function with thread</h2><p>當使用的 functional 符合 <code>Referential transparency</code> 時，多執行緒不需要去做同步鎖。因為 function 只依賴輸入的值，而不是全域變數。因此就算全域變數被其他執行緒修改，也不會影響到當前執行緒正在使用的 function 的值。所有執行緒都可以對應自己不同的值。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> global <span class="token operator">=</span> <span class="token string">"something"</span><span class="token keyword">let</span> <span class="token function-variable function">function1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">input</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// works on input</span>  <span class="token comment">// changes global</span>  global <span class="token operator">=</span> <span class="token string">"somethingElse"</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> <span class="token function-variable function">function2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>global <span class="token operator">===</span> <span class="token string">"something"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">//business logic</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token operator">--</span><span class="token operator">-</span><span class="token keyword">let</span> <span class="token function-variable function">function1</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">input<span class="token punctuation">,</span>global</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token comment">// works on input</span>  <span class="token comment">// changes global</span>  global <span class="token operator">=</span> <span class="token string">"somethingElse"</span><span class="token punctuation">&#125;</span><span class="token keyword">let</span> <span class="token function-variable function">function2</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">global</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>global <span class="token operator">===</span> <span class="token string">"something"</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token comment">//business logic</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>上面的 function1 被呼叫時，會修改 <code>global</code> 的值，造成其他執行緒在呼叫 function2 時出現錯誤。而下面的 function1 符合 <code>Referential transpaerency</code> 不會讓 function1 影響到 function2。</p><h2 id="Lambda-運算式"><a href="#Lambda-運算式" class="headerlink" title="Lambda 運算式"></a>Lambda 運算式</h2><p>lambda 運算式只做兩件事情，其本身就是個匿名函數 (anonymous function)。</p><blockquote><p>運算式：$\lambda x.x + 2$<br>$\blacktriangledown$<br>數學式子：$f(x) = x + 2$</p></blockquote><ol><li>Application：指派 <code>value</code> 到其他運算式中</li><li>Abstraction：定義一個運算式</li></ol><p>lambda 運算式類型</p><blockquote><p>$\lambda x.x/y + 2$<br>x 被綁定在 lambda 運算式中為 <code>約定變數 (bound variable)</code><br>y 不知位於何處，被稱為 <code>自由變數 (free variable)</code>，通常其值來自外在執行環境</p></blockquote><ol><li>Close：運算式中，所有的變數都是約定變數</li><li>Open：運算式中，存在自由變數</li></ol><h2 id="Closure"><a href="#Closure" class="headerlink" title="Closure"></a>Closure</h2><p>可以藉由外在執行環境，將上述的自由變數賦予其數值，將其轉換成約定變數(也就是已知的變數)。<br>將 open 的運算式，轉換成 close 的運算式。這個關閉 open 運算式的動作就叫做 <code>closure</code>。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">def</span> <span class="token function">f</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">g</span><span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> x <span class="token operator">+</span> y    <span class="token keyword">return</span> g  <span class="token comment"># Return a closure.</span><span class="token keyword">def</span> <span class="token function">h</span><span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token keyword">lambda</span> y<span class="token punctuation">:</span> x <span class="token operator">+</span> y  <span class="token comment"># Return a closure.</span><span class="token comment"># Assigning specific closures to variables.</span>a <span class="token operator">=</span> f<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span>b <span class="token operator">=</span> h<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token comment"># Using the closures stored in variables.</span><span class="token keyword">assert</span> a<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span><span class="token keyword">assert</span> b<span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span><span class="token comment"># Using closures without binding them to variables first.</span><span class="token keyword">assert</span> f<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span>  <span class="token comment"># f(1) is the closure.</span><span class="token keyword">assert</span> h<span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">6</span>  <span class="token comment"># h(1) is the closure.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>Clousre 所能 access 到的 scopes：</p><ol><li>宣告範圍內的所有 variables。</li><li>Global variables。</li><li>outer function’s variables。</li></ol><p>下列的程式碼，符合規則 1：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 5</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>下列程式碼，符合規則 2：</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">let</span> global <span class="token operator">=</span> <span class="token string">'global'</span><span class="token punctuation">;</span><span class="token keyword">function</span> <span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">function</span> <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">let</span> a <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>global<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token function">inner</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">outer</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// global</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 程式語言 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Function </tag>
            
            <tag> Lambda </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/uncategorized/Clean%20Architecture/"/>
      <url>/uncategorized/Clean%20Architecture/</url>
      
        <content type="html"><![CDATA[<h1 id="Clean-Architecture"><a href="#Clean-Architecture" class="headerlink" title="Clean Architecture"></a>Clean Architecture</h1><h6 id="tags-System-Design"><a href="#tags-System-Design" class="headerlink" title="tags: System Design"></a>tags: <code>System Design</code></h6><h2 id="為何需要-Clean-Architecture"><a href="#為何需要-Clean-Architecture" class="headerlink" title="為何需要 Clean Architecture"></a>為何需要 Clean Architecture</h2><blockquote><p>Application 的核心不應該是 DB，也不應該是任何你正在使用的 framework ，application 的核心應該是你的 <strong>use cases</strong>。</p></blockquote><h2 id="Clean-Architecture-想要解決或減輕的問題"><a href="#Clean-Architecture-想要解決或減輕的問題" class="headerlink" title="Clean Architecture 想要解決或減輕的問題"></a>Clean Architecture 想要解決或減輕的問題</h2><ul><li><p>過早的決策：一個新的 Project 開始時，我們所知道的必須要解決的問題是最少的。</p></li><li><p>難以改變（hard to chagne）：當我們有新的需求時，我們必須決定要「重新更改架構」或是「在原有的架構上增添新的東西」，而後者往往是較容易實現的。最好架構是：「延後我們對特定解決方案的承諾，並改變我們的想法」。</p></li><li><p>架構的中心圍繞著 framework：Framework 是一個工具，而不是要遵循的體系架構。框架通常需要你的承諾，但它們並不需要向你承諾。它們可以朝著各自不同的方向發展，然後就你會被它們的規則和怪癖所困擾。</p></li><li><p>架構的中心圍繞著 DB：我們通常會以 DB 為核心創建了一個 CRUD 的系統，最後會在所有地方都調用 DB object，並按照 table, row, column 的方式在來對待所有的事物。</p></li><li><p>過度 focus 在技術面（technical aspects）上：當我們談到系統架構時都會說出像是這樣的話：「它跑在 tomcat 上，使用 Oracle DB 和 spring」</p></li><li><p>難以找到東西（it’s hard to find things）：難以找到，讓每次的改動都會使時程更長且痛苦的東西。</p></li><li><p>商業邏輯散布各地：商業邏輯橫跨各個 layer，每當我們要檢查某個東西是否 work 的時候，唯一的選擇就是 debug 所有的情況。更慘的是，它時常重複散布在各個地方。</p></li><li><p>強迫/鼓勵進行繁重的 test：通常我們選擇測試的方法就是測試 GUI，因為 GUI 本身包含了許多邏輯的東西，或是因為架構的關係只允許我們這樣測試。這使得測試跑起來很慢且繁重和脆弱。這結果導致了人們沒辦法 run ，而且在 build 的時候時常被弄壞。</p></li><li><p>很少部署（infrequent deploys）：因為要在不破壞原有架構下，很難進行更改，導致在開發的時候往往 feature branch 長時間開發變成了一大包，而不是一小包一小包的進行部署。</p></li></ul><h2 id="Clean-Architecture-帶來的好處"><a href="#Clean-Architecture-帶來的好處" class="headerlink" title="Clean Architecture 帶來的好處"></a>Clean Architecture 帶來的好處</h2><ul><li><p>更有效的測試策略（effective testing strategy）：這個要 follow <a href="https://i.imgur.com/NIeQbNI.png">test pyramid</a>，帶給我們更快速且可靠的 build。</p></li><li><p>框架是被隔離的（frameworks are isolated）：framework 被分割在各個 module 中，當我們要進行改動時，只要在那個 module 改就好了，不需要去管其他的部分。</p></li><li><p>不依賴 DB：把 DB 視為一個 data provider。讓系統專注在 use case 而不是 CRUD。</p></li><li><p>Screaming architecture：也就是它會自己表達它的用途。當你在看這個 package 的架構時，會讓你感覺到這個 application 在表達它在做些什麼，而不是它的技術實現細節。</p></li><li><p>所有的商業邏輯都在一個特定的 use case 中：幫助我們可以快速地找出問題點，而且這樣商業邏輯也不會重複散布在各個地方。</p></li><li><p>難以做出錯誤的事情：因為每個 module 會強制 compilation dependencies。如果你嘗試做其他的你不想做的事情，這個 application 將不會 compile。</p></li><li><p>隨時部署：我們可以透過 feature flag 來隨時準備進行部署，這樣我們就可以得到 continuous integration，甚至不需要 feature branch。</p></li><li><p><strong>Swarming on stories</strong> so that different pairs can easily work on the same story at the same time to complete it quicker</p></li><li><p>好的整體架構：清楚定義 use case 能夠輕鬆的切割成 microservice。</p></li></ul><h2 id="Clean-Architecture-帶來的成本："><a href="#Clean-Architecture-帶來的成本：" class="headerlink" title="Clean Architecture 帶來的成本："></a>Clean Architecture 帶來的成本：</h2><ul><li>重複的 code： Entity 被使用在商業邏輯上時，在處理 DB 和使用 json 來表達時，會有各種不同的表示方式。你可能會感覺到重覆的 code，但你實際上會更偏好於解耦，而不是 DRY。</li><li>你必須對商業邏輯感興趣：你必須用合適的商業邏輯來”合理化”架構，如果你的 use case 只是從 DB 中存取資料的話，那你或許可以擺脫一些更簡單的事情。</li></ul><h2 id="Application-Structure"><a href="#Application-Structure" class="headerlink" title="Application Structure"></a>Application Structure</h2><p><img src="https://i.imgur.com/645UZK3.png"></p><p><img src="https://i.imgur.com/GgNJCxd.png"></p><h3 id="Core"><a href="#Core" class="headerlink" title="Core"></a>Core</h3><h4 id="Entites"><a href="#Entites" class="headerlink" title="Entites"></a>Entites</h4><ul><li>表示你的 domain object</li><li>特定的邏輯，且適用於所有的 entity（例如：驗證 hostname 的格式）。</li><li>Plain java objects: no frameworks, no annotations.</li></ul><h4 id="Use-Cases"><a href="#Use-Cases" class="headerlink" title="Use Cases"></a>Use Cases</h4><ul><li>Represent your business actions, it’s what you can do with the application. Expect one use case for each business action</li><li>Pure business logic, plain java (expect maybe some utils libraries like StringUtils)</li><li>Define interfaces for the data that they need in order to apply some logic. One or more dataproviders will implement the interface, but the use case doesn’t know where the data is coming from</li><li>The use case doesn’t know who triggered it and how the results are going to be presented (e.g. could be on a web page, or returned as json, or simply logged, etc.)</li><li>Throws business exceptions</li></ul><h3 id="Data-providers"><a href="#Data-providers" class="headerlink" title="Data providers"></a>Data providers</h3><ul><li>Retrieve and store data from and to a number of sources (database, network devices, file system, 3rd parties, etc.)</li><li>Implement the interfaces defined by the use case</li><li>Use whatever framework is most appropriate (they are going to be isolated here anyway)</li><li>Note: if using an ORM for database access, here you’d have another set of objects in order to represent the mapping to the tables (don’t use the core entities as they might be very different)</li></ul><h3 id="Entrypoints"><a href="#Entrypoints" class="headerlink" title="Entrypoints"></a>Entrypoints</h3><ul><li>Are ways to interact with the application, and typically involve a delivery mechanism (e.g. REST APIs, scheduled jobs, GUI, other systems)</li><li>Trigger a use case and convert the result to the appropriate format for the delivery mechanism</li><li>A GUI would use MVC (or MVP) in here; the controller would trigger a use case</li></ul><h3 id="Configuration"><a href="#Configuration" class="headerlink" title="Configuration"></a>Configuration</h3><ul><li>Wires everything together</li><li>Frameworks (e.g. for dependency injection) are isolated here</li><li>Has the “dirty details” like Main class, web server configuration, datasource configuration, etc.</li></ul><h2 id="Examples"><a href="#Examples" class="headerlink" title="Examples"></a>Examples</h2><p><img src="https://i.imgur.com/ARzoOpe.png"></p><p><img src="https://i.imgur.com/vFvvsrG.png"></p><h2 id="Testing-Strategy"><a href="#Testing-Strategy" class="headerlink" title="Testing Strategy"></a>Testing Strategy</h2><p><img src="https://i.imgur.com/NIeQbNI.png" alt="test pyramid"></p><h3 id="Unit-Tests"><a href="#Unit-Tests" class="headerlink" title="Unit Tests"></a>Unit Tests</h3><ul><li>for TDD (a.k.a. Tests first, to drive design)</li><li>Cover every little detail, aim for 100% coverage</li><li>“Dev to dev” documentation: What should this class do?</li><li>Test individual classes in isolation, very fast</li></ul><h3 id="Acceptance-Tests"><a href="#Acceptance-Tests" class="headerlink" title="Acceptance Tests"></a>Acceptance Tests</h3><ul><li>for BDD (a.k.a. Conversations with the stakeholders)</li><li>Demonstrate and document business requirements</li><li>“Business” documentation: What does the system do?</li><li>Test a use case in isolation, very fast (no GUI, no DB, etc.)</li><li>Use your favourite BDD framework (we use Yatspec)</li></ul><h3 id="Integration-Tests"><a href="#Integration-Tests" class="headerlink" title="Integration Tests"></a>Integration Tests</h3><ul><li>Test integration with slow parts (http, database, etc.)</li><li>“Dev” documentation: Does this work as expected?</li><li>Test one layer in isolation (e.g. only rest endpoint, or only data provider). Slow</li><li>Use whatever library makes it easy (e.g. Spring MockMVC; in-memory db)</li></ul><h3 id="End-to-end-Tests"><a href="#End-to-end-Tests" class="headerlink" title="End-to-end Tests"></a>End-to-end Tests</h3><ul><li>Test only the critical journeys (e.g. most common happy path)</li><li>Demonstrate “business” end-to-end requirement</li><li>Start the whole app, very slow. Keep these to a minimum</li></ul><h2 id="The-example-domain"><a href="#The-example-domain" class="headerlink" title="The example domain"></a>The example domain</h2><p><img src="https://i.imgur.com/5EJvv9z.png"></p><p>This example application is a simplified version of a real production application that we develop at Sky. The domain is a telecommunication domain. It’s a Network Inventory software that has the fulfill the following use cases:</p><ul><li>Capacity of an exchange: how much available space have we got in a particular exchange? can we take on more customers in that area?</li><li>Reconcile devices: has anything changed in reality that we don’t know of?</li><li>Get details of a particular device, by hostname</li></ul><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><p><a href="https://github.com/mattia-battiston/clean-architecture-example">clean-architecture-example</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>JavaScript - Basic JavaScript</title>
      <link href="/JavaScript/%E5%9F%BA%E7%A4%8E/JavaScript/basic/Basic%20JavaScript/"/>
      <url>/JavaScript/%E5%9F%BA%E7%A4%8E/JavaScript/basic/Basic%20JavaScript/</url>
      
        <content type="html"><![CDATA[<h2 id="Semicolon"><a href="#Semicolon" class="headerlink" title="Semicolon"></a>Semicolon</h2><p>Statement 句尾必須加上分號。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">var</span> x <span class="token operator">=</span> <span class="token number">3</span> <span class="token operator">*</span> <span class="token number">7</span><span class="token punctuation">;</span><span class="token keyword">var</span> <span class="token function-variable function">f</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token punctuation">;</span> <span class="token comment">// function expr. inside var decl.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h2 id="基本型態"><a href="#基本型態" class="headerlink" title="基本型態"></a>基本型態</h2><ul><li><code>booleans</code></li><li><code>numbers</code></li><li><code>strings</code></li><li><code>null</code>: no object</li><li><code>undefined</code>: no value</li></ul><h3 id="Null"><a href="#Null" class="headerlink" title="Null"></a>Null</h3><p><code>Null</code> 為 <code>object</code> 是一個 bug 但現在修改它，會導致舊的 code 出現問題因此不能修正。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript">console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token comment">// object</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><h3 id="Number"><a href="#Number" class="headerlink" title="Number"></a>Number</h3><p>所有的 <code>number</code> 都是<strong>浮點數</strong>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">1</span> <span class="token operator">===</span> <span class="token number">1.0</span> <span class="token comment">// true</span><span class="token comment">// toString (all legal)</span><span class="token number">123.</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">123</span> <span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token number">123.0</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>你可以使用 <code>parseFloat</code> 和 <code>Number</code> 把字串轉換成數值。</p><p><code>parseFloat</code> 會在轉換之前，將輸入的值轉換成 <code>String</code> 後，才進行轉換。但相較於 <code>Number</code> 效能較快。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">'123'</span><span class="token punctuation">)</span> <span class="token comment">// 123</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token comment">// same as parseFlaot('true')</span><span class="token comment">// NaN</span><span class="token function">Number</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token comment">// 1</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="NaN"><a href="#NaN" class="headerlink" title="NaN"></a>NaN</h3><p><code>NaN</code> 表示它不是一個數字。<code>isNaN</code> 會先將值轉換成數值，再判斷它是不是 <code>NaN</code>。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token function">Number</span><span class="token punctuation">(</span><span class="token string">'xyz'</span><span class="token punctuation">)</span> <span class="token comment">// 'xyz' can’t be converted to a number</span><span class="token comment">// NaN</span><span class="token function">isNaN</span><span class="token punctuation">(</span><span class="token string">'xyz'</span><span class="token punctuation">)</span> <span class="token comment">// true</span><span class="token comment">// 正確確認，原始資料是不是 NaN 的函式</span><span class="token keyword">function</span> <span class="token function">myIsNaN</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> <span class="token keyword">typeof</span> value <span class="token operator">===</span> <span class="token string">'number'</span> $$ is <span class="token function">NaN</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">function</span> <span class="token function">myIsNaN</span><span class="token punctuation">(</span><span class="token parameter">value</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">return</span> value <span class="token operator">!==</span> value<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Infinity"><a href="#Infinity" class="headerlink" title="Infinity"></a>Infinity</h3><p><code>Infinity</code> 用來表示無窮大的數字，或一些錯誤運算。（與 <code>NaN</code> 比大小時，結果皆為 <code>false</code>）</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token number">3</span> <span class="token operator">/</span> <span class="token number">0</span><span class="token comment">// Infinity</span>Math<span class="token punctuation">.</span><span class="token function">pow</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span> <span class="token number">1024</span><span class="token punctuation">)</span> <span class="token comment">// number too large</span><span class="token comment">// Infinity</span><span class="token number">3</span> <span class="token operator">/</span> <span class="token operator">-</span><span class="token number">0</span><span class="token comment">// -Infinity</span><span class="token number">Infinity</span> <span class="token operator">-</span> <span class="token number">Infinity</span><span class="token comment">// NaN</span><span class="token number">Infinity</span> <span class="token operator">/</span> <span class="token number">Infinity</span><span class="token comment">// NaN</span><span class="token number">Infinity</span> <span class="token operator">+</span> <span class="token number">Infinity</span><span class="token comment">// Infinity</span><span class="token number">Infinity</span> <span class="token operator">*</span> <span class="token number">Infinity</span><span class="token comment">// Infinity</span><span class="token number">Infinity</span> <span class="token operator">></span> <span class="token number">NaN</span><span class="token comment">// false</span><span class="token operator">-</span><span class="token number">Infinity</span> <span class="token operator">&lt;</span> <span class="token number">NaN</span><span class="token comment">// false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Arguments"><a href="#Arguments" class="headerlink" title="Arguments"></a>Arguments</h3><p><code>Arguments</code> 可以接受任意的 <code>parameter</code> 的輸入，其為一個物件。</p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> arguments<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">var</span> t <span class="token operator">=</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">848934</span><span class="token punctuation">,</span><span class="token string">"sfoijsfdi"</span><span class="token punctuation">,</span> <span class="token string">'sdfjiosd'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> t<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// object</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Null-amp-Undefined"><a href="#Null-amp-Undefined" class="headerlink" title="Null &amp; Undefined"></a>Null &amp; Undefined</h3><p>在 <code>JSON</code> 中，<code>undefined</code> 會被移除，而 <code>null</code> 則會被留下。</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"foo"</span><span class="token operator">:</span> undefined<span class="token punctuation">,</span> <span class="token comment">// will be removed</span>    <span class="token property">"bar"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Module-Cheatsheet"><a href="#Module-Cheatsheet" class="headerlink" title="Module Cheatsheet"></a>Module Cheatsheet</h2><p><img src="https://i.imgur.com/PNW0X3p.png"></p><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="http://speakingjs.com/es5/">Speaking JavaScript</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> JavaScript </category>
          
          <category> 基礎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JavaScript </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>API Example</title>
      <link href="/uncategorized/API%20Example/"/>
      <url>/uncategorized/API%20Example/</url>
      
        <content type="html"><![CDATA[<h1 id="API-Example"><a href="#API-Example" class="headerlink" title="API Example"></a>API Example</h1><h6 id="tags-document-example-API"><a href="#tags-document-example-API" class="headerlink" title="tags: document example API"></a>tags: <code>document example</code> <code>API</code></h6><h2 id="GET"><a href="#GET" class="headerlink" title="GET"></a>GET</h2><h3 id="Get-Book"><a href="#Get-Book" class="headerlink" title="Get Book"></a>Get Book</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">GET /api/books/&#123;bookId&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Request</strong></p><table><thead><tr><th>欄位 (Field name)</th><th>欄位說明 (Description)</th><th>型別 (Type)</th><th>預設值（Default value）</th><th>必填（Required）</th><th>參數位置 (In)</th><th>備註 (Note)</th></tr></thead><tbody><tr><td>bookId</td><td>Unique identifier of book</td><td><code>int</code></td><td></td><td>是</td><td><code>path</code></td><td>無</td></tr><tr><td>withTrashed</td><td>是否要得到刪除的書</td><td><code>boolean</code></td><td><code>false</code></td><td>否</td><td><code>query</code></td><td>無</td></tr></tbody></table><p>參數範例</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://test.com/api/books/1?withTrashed=true<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Response</strong></p><p>回傳欄位說明</p><table><thead><tr><th>欄位 (Field name)</th><th>欄位說明 (Description)</th><th>型別 (Type)</th><th>預設值（Default value）</th><th>備註 (Note)</th></tr></thead><tbody><tr><td>id</td><td>Unique identifier of book</td><td><code>int</code></td><td></td><td>無</td></tr><tr><td>name</td><td>The name of book</td><td><code>string</code></td><td><code>null</code></td><td>無</td></tr></tbody></table><p>成功</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token null keyword">null</span><span class="token punctuation">,</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>失敗</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"AUTH_ERROR"</span><span class="token punctuation">,</span>    <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Role Wrong"</span><span class="token punctuation">,</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token string">"A00003"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="POST"><a href="#POST" class="headerlink" title="POST"></a>POST</h2><h3 id="Create-Book"><a href="#Create-Book" class="headerlink" title="Create Book"></a>Create Book</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">POST /api/book<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Request</strong></p><table><thead><tr><th>欄位 (Field name)</th><th>說明 (Description)</th><th>型別 (Type)</th><th>參數位置 (In)</th><th>必填（Required）</th><th>備註 (Note)</th></tr></thead><tbody><tr><td>name</td><td>The name of book</td><td><code>string</code></td><td><code>body</code></td><td>是</td><td>無</td></tr></tbody></table><p>參數範例</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"abc"</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><strong>Response</strong></p><p>回傳欄位說明</p><table><thead><tr><th>欄位 (Field name)</th><th align="left">說明 (Description)</th><th>型別 (Type)</th><th>預設值（Default value）</th><th>備註 (Note)</th></tr></thead><tbody><tr><td>id</td><td align="left">Unique identifier of book</td><td><code>int</code></td><td></td><td>無</td></tr><tr><td>name</td><td align="left">The name of book</td><td><code>string</code></td><td><code>null</code></td><td>無</td></tr></tbody></table><p>成功</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>        <span class="token property">"id"</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>        <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"abc"</span><span class="token punctuation">,</span>       <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>失敗</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"AUTH_ERROR"</span><span class="token punctuation">,</span>    <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Role Wrong"</span><span class="token punctuation">,</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token string">"A00003"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h2 id="DELETE"><a href="#DELETE" class="headerlink" title="DELETE"></a>DELETE</h2><h3 id="Delete-Book"><a href="#Delete-Book" class="headerlink" title="Delete Book"></a>Delete Book</h3><pre class="line-numbers language-text" data-language="text"><code class="language-text">DELETE /api/books/&#123;bookId&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><table><thead><tr><th>欄位 (Field name)</th><th>欄位說明 (Description)</th><th>型別 (Type)</th><th>參數位置 (In)</th><th>必填（Required）</th><th>備註 (Note)</th></tr></thead><tbody><tr><td>bookId</td><td>Unique identifier of book</td><td><code>int</code></td><td><code>path</code></td><td>是</td><td>無</td></tr></tbody></table><p>參數範例</p><pre class="line-numbers language-text" data-language="text"><code class="language-text">http://test.com/api/books/1<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><strong>Response</strong></p><p>成功</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>    <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"success"</span><span class="token punctuation">,</span>    <span class="token property">"data"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>失敗</p><pre class="line-numbers language-json" data-language="json"><code class="language-json"><span class="token punctuation">&#123;</span>  <span class="token property">"status"</span><span class="token operator">:</span> <span class="token string">"error"</span><span class="token punctuation">,</span>  <span class="token property">"error"</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    <span class="token property">"type"</span><span class="token operator">:</span> <span class="token string">"AUTH_ERROR"</span><span class="token punctuation">,</span>    <span class="token property">"message"</span><span class="token operator">:</span> <span class="token string">"Role Wrong"</span><span class="token punctuation">,</span>    <span class="token property">"code"</span><span class="token operator">:</span> <span class="token string">"A00003"</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Java - Basic Conception for JVM</title>
      <link href="/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Basic%20Conception%20for%20JVM/"/>
      <url>/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Basic%20Conception%20for%20JVM/</url>
      
        <content type="html"><![CDATA[<h1 id=""><a href="#" class="headerlink" title=""></a></h1><h6 id="tags"><a href="#tags" class="headerlink" title="tags: ``"></a>tags: ``</h6><h2 id="Java-Code-compiler-步驟"><a href="#Java-Code-compiler-步驟" class="headerlink" title="Java Code compiler 步驟"></a>Java Code compiler 步驟</h2><ol><li>將 <code>.java</code> 的原始碼程式檔，編譯成 <code>.class</code> 的二元碼檔案。</li><li>將 <code>.class</code> 放入 <code>JVM</code> 中執行。</li></ol><p><img src="https://i.imgur.com/bNLvG2m.png"></p><hr><p><code>JVM</code> 執行的時候，會驗證二元碼檔案，確保過程中沒有損害系統或檔案的病毒存在。現代的 <code>JVM</code> 為了克服早期直譯較慢的缺點，結合了「即時編譯（just-in-time compilation, JIT）」，當 <code>JVM</code> 發現有常用的 <code>function</code> 時，會將它編譯成執行速度較快的機器語言，來加速直譯的速度。</p><p><img src="https://i.imgur.com/ftX143z.png"></p>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基礎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/uncategorized/Git%20Commit%20Message/"/>
      <url>/uncategorized/Git%20Commit%20Message/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-Commit-Message"><a href="#Git-Commit-Message" class="headerlink" title="Git Commit Message"></a>Git Commit Message</h1><h6 id="tags-document-example"><a href="#tags-document-example" class="headerlink" title="tags: document example"></a>tags: <code>document example</code></h6><ol><li><code>feat</code>: 新功能特性</li><li><code>fix</code>: bug 修復</li><li><code>docs</code>: 文件修改與更動</li><li><code>style</code>: 程式碼樣式修改，不影響程式碼的運行(空白、格式、缺少分號等等)</li><li><code>refactor</code>: 程式重構，舊有功能行為不受影響(沒有改變)</li><li><code>infra</code>: 基礎建設相關，如前後端新套件安裝(透過composer/npm)，或是開發環境、機器相關的調整</li><li><code>revert</code>: 還原到提交</li><li><code>other</code>: 不在上述分類</li></ol><h2 id="Example"><a href="#Example" class="headerlink" title="Example"></a>Example</h2><p>git commit -m “<code>[feat] I create a new feature</code>“</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/uncategorized/Comment%20Type/"/>
      <url>/uncategorized/Comment%20Type/</url>
      
        <content type="html"><![CDATA[<h1 id="Comment-Type"><a href="#Comment-Type" class="headerlink" title="Comment Type"></a>Comment Type</h1><h6 id="tags-document-example"><a href="#tags-document-example" class="headerlink" title="tags: document example"></a>tags: <code>document example</code></h6><h2 id="Tom-Doc"><a href="#Tom-Doc" class="headerlink" title="Tom Doc"></a>Tom Doc</h2><pre class="line-numbers language-ruby" data-language="ruby"><code class="language-ruby"><span class="token comment"># Public: Duplicate some text an arbitrary number of times.</span><span class="token comment">#</span><span class="token comment"># text  - The String to be duplicated.</span><span class="token comment"># count - The Integer number of times to duplicate the text.</span><span class="token comment">#</span><span class="token comment"># Examples</span><span class="token comment">#</span><span class="token comment">#   multiplex('Tom', 4)</span><span class="token comment">#   # => 'TomTomTomTom'</span><span class="token comment">#</span><span class="token comment"># Returns the duplicated String.</span><span class="token keyword">def</span> <span class="token method-definition"><span class="token function">multiplex</span></span><span class="token punctuation">(</span>text<span class="token punctuation">,</span> count<span class="token punctuation">)</span>  text <span class="token operator">*</span> count<span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="C-style-Comment-type"><a href="#C-style-Comment-type" class="headerlink" title="C-style Comment type"></a>C-style Comment type</h2><h3 id="Block-Comments"><a href="#Block-Comments" class="headerlink" title="Block Comments"></a>Block Comments</h3><p>Block comment 是用來描述 <code>file</code>、<code>method</code>、<code>data structures</code> 和 <code>algorithm</code> 的註解方式。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* * Here is a block comment with some very special * formatting that I want indent(1) to ignore. * * one * two * three */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Single-Line-Comments"><a href="#Single-Line-Comments" class="headerlink" title="Single-Line Comments"></a>Single-Line Comments</h3><p>如果單行的註解無法表示全部，則應該用上面的 block comment。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* Handle the condition. */</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Trailing-Comments"><a href="#Trailing-Comments" class="headerlink" title="Trailing Comments"></a>Trailing Comments</h3><p>非常短的註解，可以放置程式碼後面，但它們必須與程式碼之間有一定的距離。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> TRUE<span class="token punctuation">;</span>          <span class="token comment">/* special case */</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">isprime</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* works only for odd a */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="End-Of-Line-Comments"><a href="#End-Of-Line-Comments" class="headerlink" title="End-Of-Line Comments"></a>End-Of-Line Comments</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Do a double-flip.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Explain why here.</span><span class="token comment">//if (bar > 1) &#123;</span><span class="token comment">//</span><span class="token comment">//     // Do a triple-flip.</span><span class="token comment">//     ...</span><span class="token comment">//&#125;</span><span class="token comment">//else</span><span class="token comment">// return false;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Documentation-Comments"><a href="#Documentation-Comments" class="headerlink" title="Documentation Comments"></a>Documentation Comments</h3><p>用來描述 Java 的 <code>class</code>、<code>interface</code>、<code>constructor</code>, <code>methods</code> 和 <code>fields</code> 常用的 tag 包含<code>@return</code>、<code>@param</code>、<code>@see</code>。</p><p>特別注意，Documentation Comments 是用來描述參數的輸入與輸出和一些基本事項，詳細的實現方法與細節，應使用上面的註解方式。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** The Example class provides ...*/</span><span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Don’t-document-overriding-methods-usually"><a href="#Don’t-document-overriding-methods-usually" class="headerlink" title="Don’t document overriding methods (usually)"></a>Don’t document overriding methods (usually)</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Gets the installed version of the database.   *   * @return The database version identifier.   */</span>  <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Bad.</span><span class="token comment">//   - Overriding method doc doesn't add anything.</span><span class="token keyword">class</span> <span class="token class-name">PostgresDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Gets the installed version of the database.   *   * @return The database version identifier.   */</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Good.</span><span class="token keyword">class</span> <span class="token class-name">PostgresDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Great.</span><span class="token comment">//   - The doc explains how it differs from or adds to the interface doc.</span><span class="token keyword">class</span> <span class="token class-name">TwitterDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Semantic version number.   *   * @return The database version in semver format.   */</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Code-Examples"><a href="#Code-Examples" class="headerlink" title="Code Examples"></a>Code Examples</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* * %W% %E% Firstname Lastname * * Copyright (c) 1993-1996 Sun Microsystems, Inc. All Rights Reserved. * * This software is the confidential and proprietary information of Sun * Microsystems, Inc. ("Confidential Information"). You shall not * disclose such Confidential Information and shall use it only in * accordance with the terms of the license agreement you entered into * with Sun. * * SUN MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED * TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SUN SHALL NOT BE LIABLE FOR * ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR * DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. */</span><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>blah</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>blah<span class="token punctuation">.</span>blahdy<span class="token punctuation">.</span></span><span class="token class-name">BlahBlah</span><span class="token punctuation">;</span><span class="token comment">/** * Class description goes here. * * @version 1.10 04 Oct 1996 * @author Firstname Lastname */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blah</span> <span class="token keyword">extends</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* A class implementation comment can go here. */</span>        <span class="token comment">/** classVar1 documentation comment */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> classVar1<span class="token punctuation">;</span>        <span class="token comment">/**     * classVar2 documentation comment that happens to be     * more than one line long     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> classVar2<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar1 documentation comment */</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> instanceVar1<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar2 documentation comment */</span>    <span class="token keyword">protected</span> <span class="token keyword">int</span> instanceVar2<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar3 documentation comment */</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> instanceVar3<span class="token punctuation">;</span>    <span class="token comment">/**     * ...method Blah documentation comment...     */</span>    <span class="token keyword">public</span> <span class="token class-name">Blah</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * ...method doSomething documentation comment...     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * ...method doSomethingElse documentation comment...     * @param someParam description     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token class-name">Object</span> someParam<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML &amp; CSS coding style</title>
      <link href="/%E5%89%8D%E7%AB%AF/froent-end/HTML%20&amp;%20CSS%20coding%20style/"/>
      <url>/%E5%89%8D%E7%AB%AF/froent-end/HTML%20&amp;%20CSS%20coding%20style/</url>
      
        <content type="html"><![CDATA[<h2 id="一般規定"><a href="#一般規定" class="headerlink" title="一般規定"></a>一般規定</h2><h3 id="Protocol"><a href="#Protocol" class="headerlink" title="Protocol"></a>Protocol</h3><p>Always use HTTPS (https:) for images and other media files, style sheets, and scripts, unless the respective files are not available over HTTPS.</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended: omits the protocol --&gt;&lt;script src&#x3D;&quot;&#x2F;&#x2F;ajax.googleapis.com&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.4.0&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;!-- Not recommended: uses HTTP --&gt;&lt;script src&#x3D;&quot;http:&#x2F;&#x2F;ajax.googleapis.com&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.4.0&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;&lt;!-- Recommended --&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;ajax.googleapis.com&#x2F;ajax&#x2F;libs&#x2F;jquery&#x2F;3.4.0&#x2F;jquery.min.js&quot;&gt;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&#x2F;* Not recommended: omits the protocol *&#x2F;@import &#39;&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Open+Sans&#39;;&#x2F;* Not recommended: uses HTTP *&#x2F;@import &#39;http:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Open+Sans&#39;;&#x2F;* Recommended *&#x2F;@import &#39;https:&#x2F;&#x2F;fonts.googleapis.com&#x2F;css?family&#x3D;Open+Sans&#39;;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="Indentation"><a href="#Indentation" class="headerlink" title="Indentation"></a>Indentation</h3><p>Indent by <strong>2 spaces</strong> at a time.<br>Don’t use tabs or mix tabs and spaces for indentation.</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;ul&gt;  &lt;li&gt;Fantastic  &lt;li&gt;Great&lt;&#x2F;ul&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.example</span> <span class="token punctuation">&#123;</span>  <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><hr><h3 id="Spaces-and-Equal-Signs"><a href="#Spaces-and-Equal-Signs" class="headerlink" title="Spaces and Equal Signs"></a>Spaces and Equal Signs</h3><p>請不要在等號與值之間，使用空白來隔開它們。</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended --&gt;&lt;link rel &#x3D; &quot;stylesheet&quot; href &#x3D; &quot;styles.css&quot;&gt; &lt;!-- Recommended --&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;styles.css&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="Capitalization"><a href="#Capitalization" class="headerlink" title="Capitalization"></a>Capitalization</h3><p>所有的 code 大小寫使用 <code>lowercase</code>，像是 HTML 的 names, attributes, CSS 的 selectors, properites, 和 property values。</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended --&gt;&lt;A HREF&#x3D;&quot;&#x2F;&quot;&gt;Home&lt;&#x2F;A&gt;&lt;!-- Recommended --&gt;&lt;img src&#x3D;&quot;google.png&quot; alt&#x3D;&quot;Google&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended */</span><span class="token property">color</span><span class="token punctuation">:</span> #E5E5E5<span class="token punctuation">;</span><span class="token comment">/* Recommended */</span><span class="token property">color</span><span class="token punctuation">:</span> #e5e5e5<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="Encoding"><a href="#Encoding" class="headerlink" title="Encoding"></a>Encoding</h3><p>使用 <code>UTF-8</code>，需在 <code>&lt;head&gt;</code> 標籤上添加 <code>&lt;meta charset=&quot;utf-8&quot;&gt;</code>。</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended --&gt;&lt;title&gt;Test&lt;&#x2F;title&gt;&lt;article&gt;This is only a test.&lt;!-- Recommended --&gt;&lt;!DOCTYPE html&gt;&lt;meta charset&#x3D;&quot;utf-8&quot;&gt;&lt;title&gt;Test&lt;&#x2F;title&gt;&lt;article&gt;This is only a test.&lt;&#x2F;article&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="HTML"><a href="#HTML" class="headerlink" title="HTML"></a>HTML</h2><h3 id="屬性順序"><a href="#屬性順序" class="headerlink" title="屬性順序"></a>屬性順序</h3><ul><li>class</li><li>id, name</li><li>data-*</li><li>src, for, type, href, vlaue</li><li>title, alt</li><li>aria-*, role</li></ul><h3 id="Setting-The-Viewport"><a href="#Setting-The-Viewport" class="headerlink" title="Setting The Viewport"></a>Setting The Viewport</h3><blockquote><p>The viewport is the user’s visible area of a web page. It varies with the device - it will be smaller on a mobile phone than on a computer screen.</p></blockquote><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;meta name&#x3D;&quot;viewport&quot; content&#x3D;&quot;width&#x3D;device-width, initial-scale&#x3D;1.0&quot;&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><hr><h3 id="Comment"><a href="#Comment" class="headerlink" title="Comment"></a>Comment</h3><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- This is a comment --&gt;&lt;!--  This is a long comment example. This is a long comment example.  This is a long comment example. This is a long comment example.--&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="Entity-References"><a href="#Entity-References" class="headerlink" title="Entity References"></a>Entity References</h3><p>不要使用 entity references。在已經使用了 <code>UTF-8</code> 的情況下，我們不需要再用特殊字元表示法，來表示特殊符號，這樣會降低我們整個 HTML 的可讀性。因此，除了 <code>&lt;</code> 和 <code>&amp;</code> 之外，應該極力避免使用 entity references。</p><pre class="line-numbers language-htmlmixed" data-language="htmlmixed"><code class="language-htmlmixed">&lt;!-- Not recommended --&gt;The currency symbol for the Euro is &amp;ldquo;&amp;eur;&amp;rdquo;.&lt;!-- Recommended --&gt;The currency symbol for the Euro is “€”.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><hr><h3 id="Separation-of-Concerns"><a href="#Separation-of-Concerns" class="headerlink" title="Separation of Concerns"></a>Separation of Concerns</h3><p>請將網頁結構分割成「structure (markup)」、「presentation (styling)」、「behavior (scripting)」三種子結構，並藉由這三個不同的子結構來進行網頁的組成。</p><ul><li>Structrue：使用 <code>HTML</code> 來產生頁面的結構。</li><li>Presentation：使用 <code>CSS</code> 來產生頁面的樣式。</li><li>Behavior：使用 <code>JavaScript</code> 來產生頁面的互動。</li></ul><p>藉由上述的分割，可以讓每個不同的子結構具有<code>Single Responsibility Principle</code>。結構有問題就找 HTML；樣式有問題就找 CSS；互動有問題就找 JavaScript，讓頁面的 Debug 更加順暢，減少義大利麵程式碼。</p><hr><h3 id="適當的省略-type-屬性"><a href="#適當的省略-type-屬性" class="headerlink" title="適當的省略 type 屬性"></a>適當的省略 <code>type</code> 屬性</h3><p>在引入 <code>CSS</code> 與 <code>JavaScript</code> 時，請省略 <code>type</code>屬性。這在 HTML5 上是不需要的，而且這個屬性可能會在舊版瀏覽器中，產生安全性上的問題。</p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended --&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;www.google.com&#x2F;css&#x2F;maia.css&quot;    type&#x3D;&quot;text&#x2F;css&quot;&gt;&lt;!-- Recommended --&gt;&lt;link rel&#x3D;&quot;stylesheet&quot; href&#x3D;&quot;https:&#x2F;&#x2F;www.google.com&#x2F;css&#x2F;maia.css&quot;&gt;&lt;!-- Not recommended --&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;www.google.com&#x2F;js&#x2F;gweb&#x2F;analytics&#x2F;autotrack.js&quot;    type&#x3D;&quot;text&#x2F;javascript&quot;&gt;&lt;&#x2F;script&gt;&lt;!-- Recommended --&gt;&lt;script src&#x3D;&quot;https:&#x2F;&#x2F;www.google.com&#x2F;js&#x2F;gweb&#x2F;analytics&#x2F;autotrack.js&quot;&gt;&lt;&#x2F;script&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="HTML-Quotation-Marks"><a href="#HTML-Quotation-Marks" class="headerlink" title="HTML Quotation Marks"></a>HTML Quotation Marks</h3><p>請使用<code>double quotation（&quot;&quot;）</code>來取代<code>single quotation（&#39;&#39;）</code></p><pre class="line-numbers language-htmlembedded" data-language="htmlembedded"><code class="language-htmlembedded">&lt;!-- Not recommended --&gt;&lt;a class&#x3D;&#39;maia-button maia-button-secondary&#39;&gt;Sign in&lt;&#x2F;a&gt;&lt;!-- Recommended --&gt;&lt;a class&#x3D;&quot;maia-button maia-button-secondary&quot;&gt;Sign in&lt;&#x2F;a&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Html-Best-Practice"><a href="#Html-Best-Practice" class="headerlink" title="Html Best Practice"></a>Html Best Practice</h3><ol><li>總是在開頭宣告 <code>&lt;!DOCTYPE html&gt;</code> 確保瀏覽器正確的渲染頁面。</li><li>Use Meaningful Title Tags.</li><li>Use Descriptive Meta Tags.</li><li>Separate Content from Presentation - 不要把 css 寫在 html style 上。</li><li>Minify and Unify CSS.</li><li>Minify, Unify and Move Down JavaScript.</li><li>Use the Right HTML Element at the Right Place.<blockquote><ol><li>Use <code>&lt;em&gt;</code> &amp; <code>&lt;strong&gt;</code> to replcae <code>&lt;i&gt;</code> &amp; <code>&lt;b&gt;</code>.</li><li>Don’t use <code>&lt;br&gt;</code> to add a new line between <code>&lt;p&gt;</code>; use CSS                    margin/padding to instaed.</li><li>Don’t use <code>&lt;blockquote&gt;</code> for indentation ; use it when actually              <strong>quoteing text</strong>.</li></ol><ul><li><code>&lt;ul&gt;</code> (unordered lists) when the order of the list items are not                                    important.</li><li><code>&lt;ol&gt;</code> (ordered lists) when the order of the list items are important.</li><li><code>&lt;dl&gt;</code> (definition lists) for item/definition pairs.</li></ul></blockquote></li><li>Don’t Use Divs for Everything.</li><li>Use an Unordered List (<code>&lt;ul&gt;</code>) for Navigation.</li><li>Use <code>alt</code> attributes with Images<blockquote><p><code>&lt;img id=&quot;logo&quot; src=&quot;images/bgr_logo.png&quot; alt=&quot;Six Revisions Logo&quot; /&gt;</code></p></blockquote></li><li>Use <code>title</code> attributes with Links (When Needed)<blockquote><p><code>&lt;a href=&quot;http://blog.com/all-articles&quot; title=&quot;A list of all articles.&quot;&gt;Click here.&lt;/a&gt;</code></p></blockquote></li><li>善用 <code>lang</code> 屬性，協助翻譯工具。</li></ol><h2 id="CSS"><a href="#CSS" class="headerlink" title="CSS"></a>CSS</h2><h3 id="General-Rules"><a href="#General-Rules" class="headerlink" title="General Rules"></a>General Rules</h3><h4 id="CSS-Quotation-Marks"><a href="#CSS-Quotation-Marks" class="headerlink" title="CSS Quotation Marks"></a>CSS Quotation Marks</h4><p>請使用 <code>single quotation（&#39;&#39;）</code>，代替 <code>double quotation（&quot;&quot;）</code>。此外，請不要再 <code>url</code> 的 <code>value</code> 上使用 quotation。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended */</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"https://www.google.com/css/maia.css"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token selector">html</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"open sans"</span><span class="token punctuation">,</span> arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Recommended */</span><span class="token atrule"><span class="token rule">@import</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>https://www.google.com/css/maia.css<span class="token punctuation">)</span></span><span class="token punctuation">;</span></span><span class="token selector">html</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">'open sans'</span><span class="token punctuation">,</span> arial<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Type-selectors"><a href="#Type-selectors" class="headerlink" title="Type selectors"></a>Type selectors</h4><p>非必要，別把 type selectors 限制在特定的 class 或 id 下，會影響解析的效能。盡量避免使用 id 選擇器。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended */</span><span class="token selector">ul#example</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">div.error</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token selector">#example</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Recommended */</span><span class="token selector">.error</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Shorthand-Properties"><a href="#Shorthand-Properties" class="headerlink" title="Shorthand Properties"></a>Shorthand Properties</h4><p>盡量少用簡寫。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Bad example */</span><span class="token selector">.element</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 0 0 10px<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">background</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"image.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px 3px 0 0<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Good example */</span><span class="token selector">.element</span> <span class="token punctuation">&#123;</span>    <span class="token property">margin-bottom</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> red<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">"image.jpg"</span><span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">border-top-left-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">border-top-right-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="單字分隔符號"><a href="#單字分隔符號" class="headerlink" title="單字分隔符號"></a>單字分隔符號</h4><p>使用 <code>-</code> 來連接單字。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.adw-help</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">/* AdWords */</span><span class="token selector">#maia-note</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> <span class="token comment">/* Maia */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h4 id="註解"><a href="#註解" class="headerlink" title="註解"></a>註解</h4><ul><li>如果是在 Sass 中的話，推薦使用 <code>//</code> 來做 <code>block comments</code></li><li>推薦將註解獨立一行，而不是伴隨在語句後</li><li>Write detailed comments for code that isn’t self-documenting:<ul><li>Uses of z-index</li><li>Compatibility or browser-specific hacks</li></ul></li></ul><h4 id="宣告順序"><a href="#宣告順序" class="headerlink" title="宣告順序"></a>宣告順序</h4><ul><li>元素內容 Content</li><li>位置 Positioning</li><li>顯示 &amp; Box Model</li><li>文字樣式 Typography</li><li>可視化 Visual</li><li>其他雜項 Misc</li><li>動畫效果 Animation</li></ul><p><strong>宣告原則</strong></p><ol><li>重要性或影響性高的屬性放前面，例如：Positioning 區塊 放 Box Model 區塊前面。</li><li>相依性的屬性要排序，例如：position 放 top 前面。</li><li>相關性高的放一起，例如：flex 相關屬性。</li></ol><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.declaration-order</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 元素內容 Content */</span>    <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">"."</span><span class="token punctuation">;</span>    <span class="token comment">/* 位置 Positioning */</span>    <span class="token property">position</span><span class="token punctuation">:</span> absolute<span class="token punctuation">;</span>    <span class="token property">top</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">right</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">bottom</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">left</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token property">z-index</span><span class="token punctuation">:</span> 2<span class="token punctuation">;</span>    <span class="token property">float</span><span class="token punctuation">:</span> right<span class="token punctuation">;</span>    <span class="token comment">/* 顯示 &amp; Box Model */</span>    <span class="token property">display</span><span class="token punctuation">:</span> block<span class="token punctuation">;</span>    <span class="token property">flex-direction</span><span class="token punctuation">:</span> column<span class="token punctuation">;</span>    <span class="token property">flex-grow</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">justify-content</span><span class="token punctuation">:</span> space-between<span class="token punctuation">;</span>    <span class="token property">align-items</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">overflow</span><span class="token punctuation">:</span> hidden<span class="token punctuation">;</span>    <span class="token property">box-sizing</span><span class="token punctuation">:</span> border-box<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 100px<span class="token punctuation">;</span>    <span class="token property">border</span><span class="token punctuation">:</span> 1px solid #e5e5e5<span class="token punctuation">;</span>    <span class="token property">margin</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">padding</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>    <span class="token property">vertical-align</span><span class="token punctuation">:</span> middle<span class="token punctuation">;</span>    <span class="token comment">/* 文字樣式 Typography */</span>    <span class="token property">font</span><span class="token punctuation">:</span> normal 13px <span class="token string">"Helvetica Neue"</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-weight</span><span class="token punctuation">:</span> 600<span class="token punctuation">;</span>    <span class="token property">font-size</span><span class="token punctuation">:</span> 12px<span class="token punctuation">;</span>    <span class="token property">line-height</span><span class="token punctuation">:</span> 1.5<span class="token punctuation">;</span>    <span class="token property">letter-spacing</span><span class="token punctuation">:</span> 2px<span class="token punctuation">;</span>    <span class="token property">color</span><span class="token punctuation">:</span> #333<span class="token punctuation">;</span>    <span class="token property">text-align</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span>    <span class="token property">text-overflow</span><span class="token punctuation">:</span> ellipsis<span class="token punctuation">;</span>    <span class="token comment">/* 可視化 Visual */</span>    <span class="token property">background-color</span><span class="token punctuation">:</span> #f5f5f5<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>/img/icon-flash.svg<span class="token punctuation">)</span></span><span class="token punctuation">;</span>    <span class="token property">border-radius</span><span class="token punctuation">:</span> 3px<span class="token punctuation">;</span>    <span class="token property">border-collapse</span><span class="token punctuation">:</span> collapse<span class="token punctuation">;</span>    <span class="token property">box-shadow</span><span class="token punctuation">:</span>  0 1px 3px 0 #222<span class="token punctuation">;</span>    <span class="token comment">/* 其他雜項 Misc */</span>    <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token property">visibility</span><span class="token punctuation">:</span> visible<span class="token punctuation">;</span>    <span class="token property">white-space</span><span class="token punctuation">:</span> nowrap<span class="token punctuation">;</span>    <span class="token comment">/* 動畫效果 Animation */</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> hiddenTip<span class="token punctuation">;</span>    <span class="token property">animation-duration</span><span class="token punctuation">:</span> .5s<span class="token punctuation">;</span>    <span class="token property">animation-delay</span><span class="token punctuation">:</span> 3s<span class="token punctuation">;</span>    <span class="token property">animation-fill-mode</span><span class="token punctuation">:</span> forwards<span class="token punctuation">;</span>    <span class="token property">transform</span><span class="token punctuation">:</span> <span class="token function">translateY</span><span class="token punctuation">(</span>10px<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token property">transition</span><span class="token punctuation">:</span> opacity .3s<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Property-Name-Stops"><a href="#Property-Name-Stops" class="headerlink" title="Property Name Stops"></a>Property Name Stops</h4><p>請在 property 和 value 之間，用「一個空白」隔開。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended */</span><span class="token selector">h3</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span>bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Recommended */</span><span class="token selector">h3</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Declaration-Block-Separation"><a href="#Declaration-Block-Separation" class="headerlink" title="Declaration Block Separation"></a>Declaration Block Separation</h4><p>宣告的大括號與 selector 之間，應使用「一個空白」隔開，且不應該將大括號斷行到下一行。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended: missing space */</span><span class="token selector">#video</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Not recommended: unnecessary line break */</span><span class="token selector">#video</span><span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Recommended */</span><span class="token selector">#video</span> <span class="token punctuation">&#123;</span>  <span class="token property">margin-top</span><span class="token punctuation">:</span> 1em<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Selector-and-Declaration-Separation"><a href="#Selector-and-Declaration-Separation" class="headerlink" title="Selector and Declaration Separation"></a>Selector and Declaration Separation</h4><p>請將新的 selector 斷行在下一行。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Not recommended */</span><span class="token selector">a:focus, a:active</span> <span class="token punctuation">&#123;</span>  <span class="token property">position</span><span class="token punctuation">:</span> relative<span class="token punctuation">;</span> <span class="token property">top</span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* Recommended */</span><span class="token selector">h1,h2,h3</span> <span class="token punctuation">&#123;</span>  <span class="token property">font-weight</span><span class="token punctuation">:</span> normal<span class="token punctuation">;</span>  <span class="token property">line-height</span><span class="token punctuation">:</span> 1.2<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="單行與多行宣告"><a href="#單行與多行宣告" class="headerlink" title="單行與多行宣告"></a>單行與多行宣告</h3><p>單行縮排成一行，多行則用斷行隔開。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* Single declarations on one line */</span><span class="token selector">.span1</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 60px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">.span2</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 140px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">.span3</span> <span class="token punctuation">&#123;</span> <span class="token property">width</span><span class="token punctuation">:</span> 220px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token comment">/* Multiple declarations, one per line */</span><span class="token selector">.sprite</span> <span class="token punctuation">&#123;</span>    <span class="token property">display</span><span class="token punctuation">:</span> inline-block<span class="token punctuation">;</span>    <span class="token property">width</span><span class="token punctuation">:</span> 16px<span class="token punctuation">;</span>    <span class="token property">height</span><span class="token punctuation">:</span> 15px<span class="token punctuation">;</span>    <span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span>../img/sprite.png<span class="token punctuation">)</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token selector">.icon</span>           <span class="token punctuation">&#123;</span> <span class="token property">background-position</span><span class="token punctuation">:</span> 0 0<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">.icon-home</span>      <span class="token punctuation">&#123;</span> <span class="token property">background-position</span><span class="token punctuation">:</span> 0 -20px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span class="token selector">.icon-account</span>   <span class="token punctuation">&#123;</span> <span class="token property">background-position</span><span class="token punctuation">:</span> 0 -40px<span class="token punctuation">;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Media-Query-擺放位置"><a href="#Media-Query-擺放位置" class="headerlink" title="Media Query 擺放位置"></a>Media Query 擺放位置</h4><p>將 Media Query 與其最相關的規則放在一起。</p><p>:::danger<br>別把它們放在 CSS 檔案最後面，或獨立放在另外的 CSS 檔案中。<br>:::</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.element</span> <span class="token punctuation">&#123;</span> ... <span class="token punctuation">&#125;</span><span class="token selector">.element-avatar</span> <span class="token punctuation">&#123;</span> ... <span class="token punctuation">&#125;</span><span class="token selector">.element-selected</span> <span class="token punctuation">&#123;</span> ... <span class="token punctuation">&#125;</span><span class="token atrule"><span class="token rule">@media</span> <span class="token punctuation">(</span><span class="token property">min-width</span><span class="token punctuation">:</span> 480px<span class="token punctuation">)</span></span> <span class="token punctuation">&#123;</span>    <span class="token selector">.element</span> <span class="token punctuation">&#123;</span> ...<span class="token punctuation">&#125;</span>    <span class="token selector">.element-avatar</span> <span class="token punctuation">&#123;</span> ... <span class="token punctuation">&#125;</span>    <span class="token selector">.element-selected</span> <span class="token punctuation">&#123;</span> ... <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="具前綴（Prefix）的屬性"><a href="#具前綴（Prefix）的屬性" class="headerlink" title="具前綴（Prefix）的屬性"></a>具前綴（Prefix）的屬性</h4><p>使用帶有各家廠商前綴的屬性時，縮排每個屬性、垂直對齊，以便多行編輯。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.selector</span> <span class="token punctuation">&#123;</span>    <span class="token property">-webkit-box-shadow</span><span class="token punctuation">:</span> 0 1px 2px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.15<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token property">box-shadow</span><span class="token punctuation">:</span> 0 1px 2px <span class="token function">rgba</span><span class="token punctuation">(</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>0<span class="token punctuation">,</span>.15<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="font-family-中文字型"><a href="#font-family-中文字型" class="headerlink" title="font-family 中文字型"></a>font-family 中文字型</h4><p>使用英文字體名稱，並且在字型名稱中有空格時加上雙引號，避免 bundle 的結果 encode 錯誤。</p><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token selector">.selector</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* 可能造成 encode 錯誤 */</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"微軟正黑體"</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Verdana<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> \5FAE\8EDF\6B63\9ED1\9AD4<span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Verdana<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>        <span class="token comment">/* 建議的寫法 */</span>    <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">"Microsoft JhengHei"</span><span class="token punctuation">,</span> Helvetica<span class="token punctuation">,</span> Verdana<span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="keyframes-管理"><a href="#keyframes-管理" class="headerlink" title="@keyframes 管理"></a>@keyframes 管理</h4><p>若專案上有使用到cssnano，在使用css Animation 的 @keyframes 時 cssnano 會自動將 @keyframes 的名稱重新命名，並依照字母順序排列(如右側範例)。</p><p>為了避免不同專案的@keyframes命名衝突，請於：</p><ul><li>設定檔內設定 { reduceIdents: false }</li><li>@keyframes命名時加上專案名稱作為前綴字</li></ul><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* reduceIdents */</span><span class="token comment">/* before */</span><span class="token atrule"><span class="token rule">@keyframes</span> fadeOut</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> fadeOut<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">/* after */</span><span class="token atrule"><span class="token rule">@keyframes</span> a</span> <span class="token punctuation">&#123;</span>    <span class="token selector">from</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 1<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token selector">to</span> <span class="token punctuation">&#123;</span>        <span class="token property">opacity</span><span class="token punctuation">:</span> 0<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token selector">.box</span> <span class="token punctuation">&#123;</span>    <span class="token property">animation-name</span><span class="token punctuation">:</span> a<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="OOCSS-and-BEM"><a href="#OOCSS-and-BEM" class="headerlink" title="OOCSS and BEM"></a>OOCSS and BEM</h3><blockquote><p>OOCSS（Object Oriented CSS）是從物件導向的思考方式出發，讓 HTML 和 CSS 變得更加的模組化。一個規則，只適用於一種情況，藉由<strong>組合（composition）</strong> 的方式來達到模組化的效果。</p><p>BEM 則是一種命名規範，可以用來實現 OOCSS 的概念</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token comment">/* ListingCard.css */</span><span class="token selector">.ListingCard</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token selector">.ListingCard--featured</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token selector">.ListingCard__title</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token selector">.ListingCard__content</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li><code>.ListingCard</code> is the “block” and represents the higher-level component</li><li><code>.ListingCard__title</code> is an “element” and represents a descendant of <code>.ListingCard</code> that helps compose the block as a whole.</li><li><code>.ListingCard--featured</code> is a “modifier” and represents a different state or variation on the <code>.ListingCard</code> block.</li></ul><h3 id="SASS"><a href="#SASS" class="headerlink" title="SASS"></a>SASS</h3><h4 id="Property-declarations"><a href="#Property-declarations" class="headerlink" title="Property declarations"></a>Property declarations</h4><ol><li>列出所有的 <code>propery</code></li><li><code>@include</code> 放在 <code>property</code> 列表的最後。</li><li>巢狀選擇器，放在最後。</li></ol><pre class="line-numbers language-sass" data-language="sass"><code class="language-sass"><span class="token selector">.btn &#123;</span><span class="token property-line">  <span class="token property">background</span><span class="token punctuation">:</span> green;</span><span class="token property-line">  <span class="token property">font-weight</span><span class="token punctuation">:</span> bold;</span><span class="token atrule-line">  <span class="token atrule">@include</span> transition(background 0.5s ease);</span>  <span class="token selector">.icon &#123;</span><span class="token property-line">    <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px;</span>  <span class="token selector">&#125;</span><span class="token selector">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Variables"><a href="#Variables" class="headerlink" title="Variables"></a>Variables</h4><p>Prefer dash-cased variable names (e.g. <code>$my-variable</code>).<br>It is acceptable to prefix variable names that are intended to be used only within the same file with an underscore (e.g. <code>$_my-variable</code>).</p><h4 id="Mixins"><a href="#Mixins" class="headerlink" title="Mixins"></a>Mixins</h4><p><code>Mixins</code> should be used to DRY up your code, add clarity, or abstract complexity–in much the same way as well-named functions. <code>Mixins</code> that accept no arguments can be useful for this, but note that if you are not compressing your payload (e.g. gzip), this may contribute to unnecessary code duplication in the resulting styles.</p><h4 id="Extend-directive"><a href="#Extend-directive" class="headerlink" title="Extend directive"></a>Extend directive</h4><p>盡量避免使用 <code>@extend</code> ，因為這會造成 CSS 之間的耦合。盡量使用 <code>mixins</code> 代替繼承。</p><h4 id="Nested-selectors"><a href="#Nested-selectors" class="headerlink" title="Nested selectors"></a>Nested selectors</h4><blockquote><p>Do not nest selectors more than <strong>three</strong> levels deep!</p></blockquote><pre class="line-numbers language-sass" data-language="sass"><code class="language-sass"><span class="token selector">.page-container &#123;</span>  <span class="token selector">.content &#123;</span>    <span class="token selector">.profile &#123;</span>      <span class="token comment">// STOP!</span>    <span class="token selector">&#125;</span>  <span class="token selector">&#125;</span><span class="token selector">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>When selectors become this long, you’re likely writing CSS that is:</p><ul><li>Strongly coupled to the HTML (fragile)</li><li>Overly specific (powerful)</li><li>Not reusable (Again: never nest ID selectors!)</li></ul><hr><h3 id="CSS-in-JavaScript"><a href="#CSS-in-JavaScript" class="headerlink" title="CSS in JavaScript"></a>CSS in JavaScript</h3><h4 id="Use-camelCase-for-object-keys-i-e-“selectors”"><a href="#Use-camelCase-for-object-keys-i-e-“selectors”" class="headerlink" title="Use camelCase for object keys (i.e. “selectors”)."></a>Use camelCase for object keys (i.e. “selectors”).</h4><blockquote><p>Why? We access these keys as properties on the styles object in the component, so it is most convenient to use camelCase.</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// bad</span><span class="token punctuation">&#123;</span>  <span class="token string">'bermuda-triangle'</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>    display<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// good</span><span class="token punctuation">&#123;</span>  bermudaTriangle<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    display<span class="token operator">:</span> <span class="token string">'none'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Use-an-underscore-for-modifiers-to-other-styles"><a href="#Use-an-underscore-for-modifiers-to-other-styles" class="headerlink" title="Use an underscore for modifiers to other styles."></a>Use an underscore for modifiers to other styles.</h4><blockquote><p>Why? 類似 <code>BEM</code> 一樣的意圖，可以藉由下底線，知道它所要修改的 element。下底線在呼叫時，也不需要額外加上引號。</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// bad</span><span class="token punctuation">&#123;</span>  bruceBanner<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    color<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>    transition<span class="token operator">:</span> <span class="token string">'color 10s'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  bruceBannerTheHulk<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    color<span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token comment">// good</span><span class="token punctuation">&#123;</span>  bruceBanner<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    color<span class="token operator">:</span> <span class="token string">'pink'</span><span class="token punctuation">,</span>    transition<span class="token operator">:</span> <span class="token string">'color 10s'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>  bruceBanner_theHulk<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    color<span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Use-device-agnostic-names-e-g-“small”-“medium”-and-“large”-to-name-media-query-breakpoints"><a href="#Use-device-agnostic-names-e-g-“small”-“medium”-and-“large”-to-name-media-query-breakpoints" class="headerlink" title="Use device-agnostic names (e.g. “small”, “medium”, and “large”) to name media query breakpoints."></a>Use device-agnostic names (e.g. “small”, “medium”, and “large”) to name media query breakpoints.</h4><blockquote><p>Why? Commonly used names like “phone”, “tablet”, and “desktop” do not match the characteristics of the devices in the real world. Using these names sets the wrong expectations.</p></blockquote><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// bad</span><span class="token keyword">const</span> breakpoints <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  mobile<span class="token operator">:</span> <span class="token string">'@media (max-width: 639px)'</span><span class="token punctuation">,</span>  tablet<span class="token operator">:</span> <span class="token string">'@media (max-width: 1047px)'</span><span class="token punctuation">,</span>  desktop<span class="token operator">:</span> <span class="token string">'@media (min-width: 1048px)'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token comment">// good</span><span class="token keyword">const</span> breakpoints <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  small<span class="token operator">:</span> <span class="token string">'@media (max-width: 639px)'</span><span class="token punctuation">,</span>  medium<span class="token operator">:</span> <span class="token string">'@media (max-width: 1047px)'</span><span class="token punctuation">,</span>  large<span class="token operator">:</span> <span class="token string">'@media (min-width: 1048px)'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h4 id="Namespace-custom-theme-settings-under-a-nested-object-with-a-unique-and-descriptive-key"><a href="#Namespace-custom-theme-settings-under-a-nested-object-with-a-unique-and-descriptive-key" class="headerlink" title="Namespace custom theme settings under a nested object with a unique and descriptive key."></a>Namespace custom theme settings under a nested object with a unique and descriptive key.</h4><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token comment">// bad</span>ThemedStyleSheet<span class="token punctuation">.</span><span class="token function">registerTheme</span><span class="token punctuation">(</span><span class="token string">'mySection'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  mySectionPrimaryColor<span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// good</span>ThemedStyleSheet<span class="token punctuation">.</span><span class="token function">registerTheme</span><span class="token punctuation">(</span><span class="token string">'mySection'</span><span class="token punctuation">,</span> <span class="token punctuation">&#123;</span>  mySection<span class="token operator">:</span> <span class="token punctuation">&#123;</span>    primaryColor<span class="token operator">:</span> <span class="token string">'green'</span><span class="token punctuation">,</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="References"><a href="#References" class="headerlink" title="References"></a>References</h2><ol><li><a href="https://google.github.io/styleguide/htmlcssguide.html">Google HTML/CSS Style Guide</a></li><li><a href="https://www.w3schools.com/html/html5_syntax.asp">HTML Style Guide</a></li><li><a href="https://www.webfx.com/blog/web-design/20-html-best-practices-you-should-follow/">20 HTML Best Practices You Shuold Follow</a></li><li><a href="https://github.com/airbnb/javascript/tree/master/css-in-javascript">Airbnb CSS-in-JavaScript Style Guide</a></li><li><a href="https://github.com/airbnb/css">Airbnb CSS / Sass Styleguide</a></li><li><a href="http://pixnet.github.io/frontend-guideline/">pixnet 前端程式碼準則</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java - Exceptions</title>
      <link href="/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Exceptions/"/>
      <url>/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20-%20Exceptions/</url>
      
        <content type="html"><![CDATA[<h2 id="何謂-Exception"><a href="#何謂-Exception" class="headerlink" title="何謂 Exception"></a>何謂 Exception</h2><blockquote><p>在呼叫一個方法時，如果發生了程式預料之外的錯誤，會創建一個物件用來表示與處理這些錯誤，而這個處理錯誤的物件被稱為 <code>Exception Object</code>。</p></blockquote><p>Java 用來表示例外錯誤的類別 <code>Exception</code>、<code>Error</code> 的父類別為<code>Throwable</code>。只要是繼承了 <code>Throwable</code> 這個類別的子類別，皆可以做為例外錯誤被拋出去。</p><p><img src="https://i.imgur.com/4pRX9Pq.png"></p><h2 id="Throw-Exception"><a href="#Throw-Exception" class="headerlink" title="Throw Exception"></a>Throw Exception</h2><ul><li>你可以透過捕捉父類別錯誤 ，讓它直接捕捉所有繼承父類別的子類別錯誤。</li><li><code>catch</code> 只會捕捉第一個出現的符合錯誤，所以如果把父類別錯誤放在最前面，會導致不知道是哪個子類別錯誤。</li><li>一個 <code>method</code> 可以事先宣告拋出的例外類型。而呼叫的原方法可以選擇要 <code>catch</code>，還是宣告同樣的 <code>Exception</code> 類別，把錯誤往更上一層拋。</li><li>子類別在 <code>override</code> 父類別方法的時候，只能宣告父類別之前宣告的<code>Exception</code>。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Main</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token function">throwError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Error"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">Main</span><span class="token punctuation">.</span><span class="token function">throwRuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Throwable</span> th<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>err<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"RuntimeException"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">ThrowException</span><span class="token punctuation">.</span><span class="token function">throwExcpetion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">RuntimeException</span><span class="token operator">|</span><span class="token class-name">ReflectiveOperationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"Multiple Exception"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">throwError</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">Error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">throwRuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">ThrowException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">throwExcpetion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ReflectiveOperationException</span><span class="token punctuation">,</span> <span class="token class-name">RuntimeException</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Checked-Exception"><a href="#Checked-Exception" class="headerlink" title="Checked Exception"></a>Checked Exception</h2><p><code>Exception Object</code> 又可分為，<code>checked Exception</code> 與 <code>unchecked exception</code>。</p><ul><li>Checked Exception：編譯器會在編譯時確認並強制你捕捉此例外，來進行例外處理。</li><li>Unchecked Exception：編譯器在編譯時不會確認，也不會強制你捕捉此例外，繼承 <code>Error</code> 和 <code>RuntimeException</code> 的子類別都是屬於 <code>unchecked exception</code>。通常這種錯誤都是程式碼出現瑕疵（你沒有正確的遵守介面或撰寫奇怪的程式碼 —— 讀取一個不存在的陣列索引，如：<code>x[-100]</code>），或是發生了重大無法挽救的錯誤時會出現。雖然 <code>Unchecked Exception</code> 沒有明確規定一定要捕捉，但你也一樣可以去捕捉它。</li></ul><h2 id="The-try-with-resources-Statement"><a href="#The-try-with-resources-Statement" class="headerlink" title="The try-with-resources Statement"></a>The try-with-resources Statement</h2><p>任何實作 <code>AutoCloseable</code> 介面的 <code>resource</code>，都可以使用這個 <code>statement</code>。</p><ul><li>可以單獨使用 <code>try block</code>，也可以在後面接上 <code>catch block</code> 和 <code>finally block</code>，但要注意當跳到 <code>catch/finally</code> 的時候，該 <code>resource</code> 就已經被釋放了。</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">static</span> <span class="token class-name">String</span> <span class="token function">readFirstLineFromFile</span><span class="token punctuation">(</span><span class="token class-name">String</span> path<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">try</span> <span class="token punctuation">(</span><span class="token class-name">BufferedReader</span> br <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">BufferedReader</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span>path<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> br<span class="token punctuation">.</span><span class="token function">readLine</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><ul><li>如果同時存在 <code>try block</code> 和 <code>try-with-resources statment</code> 的話，來自 <code>try-with-resources statement</code> 的任何 <code>Exception</code> 都會被壓制住，並且只顯示 <code>try block</code> 的 <code>Exception</code>。可藉由另外的方法去尋訪這些被壓制住的 <code>Exception</code>。</li><li>有個繼承了 <code>AutoCloseable</code> 介面的 <code>Closeable</code> 介面，<code>Closeable</code> 所扔出來的 <code>Exception</code> 為 <code>IOException</code>；<code>AutoCloseable</code> 則是扔 <code>Exception</code>。可藉由繼承 <code>AutoCloseable</code> 的介面，去選擇擴充你想要丟出去的 <code>Exception</code>。</li></ul><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://docs.oracle.com/javase/tutorial/essential/exceptions/index.html">Oracle Java Documentation - Exceptions</a></li><li><a href="https://www.geeksforgeeks.org/exceptions-in-java/?ref=lbp">GeeksforGeeks - Exceptions in Java</a></li><li><a href="https://www.tutorialspoint.com/java/java_exceptions.htm">Tutorialspoint - Java Exceptions</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基礎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java Coding Style</title>
      <link href="/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20Coding%20Style/"/>
      <url>/Java/%E5%9F%BA%E7%A4%8E/Java/basic/Java%20Coding%20Style/</url>
      
        <content type="html"><![CDATA[<h2 id="Name-Conventions"><a href="#Name-Conventions" class="headerlink" title="Name Conventions"></a>Name Conventions</h2><ul><li>Class: <code>PascalCase</code></li><li>Interface: <code>PascalCase</code></li><li>Method: <code>camelCase</code></li><li>Variable: <code>camelCase</code></li><li>Constant: <code>SNAKE_CASE</code></li></ul><h2 id="Import-Statement"><a href="#Import-Statement" class="headerlink" title="Import Statement"></a>Import Statement</h2><ol><li>盡量不要使用萬用符，如：<code>import foo.*</code></li><li>Import 順序以 <code>top-level package</code> 來排序。</li><li>將 <code>static import</code> 和 <code>non-static import</code> 分開</li><li>Package Name: <code>lowercase</code></li><li>Package 請將 <code>URL</code> 倒過來命名，如：<code>tw.com.treebo</code></li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">javax<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">scala<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">net<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>twitter<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token keyword">import</span> <span class="token keyword">static</span> <span class="token operator">*</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="File-Common-Rules"><a href="#File-Common-Rules" class="headerlink" title="File Common Rules"></a>File Common Rules</h2><h3 id="File-Suffixes"><a href="#File-Suffixes" class="headerlink" title="File Suffixes"></a>File Suffixes</h3><table><thead><tr><th>File Type</th><th>Suffix</th></tr></thead><tbody><tr><td>Java source</td><td>.java</td></tr><tr><td>Java bytecode</td><td>.class</td></tr></tbody></table><h3 id="Common-File-Names"><a href="#Common-File-Names" class="headerlink" title="Common File Names"></a>Common File Names</h3><table><thead><tr><th>File Name</th><th>Use</th></tr></thead><tbody><tr><td>GNUmakefile</td><td>The preferred name for makefiles.We use gnumake to build our software</td></tr><tr><td>README</td><td>The preferred name for the file that summarizes the contents of a particular directory.</td></tr></tbody></table><h3 id="File-Organization"><a href="#File-Organization" class="headerlink" title="File Organization"></a>File Organization</h3><p>一個 source file 行數盡量不要超過 2000 行。</p><h2 id="Java-Source-Files"><a href="#Java-Source-Files" class="headerlink" title="Java Source Files"></a>Java Source Files</h2><p>每個 Java source file 都有一個 public class 或 interface。Private class 與 interface 關聯於該 public class 時，可以把它們放在同一個 source file 中。</p><p>Public class 或 interface 應該放在該 source file 中的最上面的位置。</p><p>Java source file 的程式碼順序：</p><ol><li>Beginning Comments</li><li>Package and Import Statements; for example:<ul><li><code>import java.awt.*</code></li><li><code>import java.net.*</code></li></ul></li><li>Class and Interface Declarations</li></ol><h3 id="Beginning-Comments"><a href="#Beginning-Comments" class="headerlink" title="Beginning Comments"></a>Beginning Comments</h3><p>所有的 source file 應該遵循 <code>c-style</code> 的註解樣式。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* * ClassName  *  * Version info *  * Copyright notice */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Package-and-Import-Statements"><a href="#Package-and-Import-Statements" class="headerlink" title="Package and Import Statements"></a>Package and Import Statements</h3><p>Source file 如果開頭第一行不是註解的話，就是 Package 的宣告，下一行則是 import。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>awt</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>awt<span class="token punctuation">.</span>peer<span class="token punctuation">.</span></span><span class="token class-name">CanvasPeer</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="Class-and-Interface-Declarations"><a href="#Class-and-Interface-Declarations" class="headerlink" title="Class and Interface Declarations"></a>Class and Interface Declarations</h3><p>Class 與 interface 的宣告順序：</p><ol><li>Class &amp; interface 文件註解</li><li>Class &amp; interface 宣告</li><li>Class &amp; interface 實作時的注意事項註解</li><li>Class (static) variables，順序：<ul><li>public</li><li>protected</li><li>private</li></ul></li><li>Instance variables，順序同上</li><li>Constructor</li><li>Method</li></ol><h2 id="Indentation"><a href="#Indentation" class="headerlink" title="Indentation"></a>Indentation</h2><p>縮排使用 4 個空格，如果是在 <code>block indentation</code> 則為 2 個空格。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">foo</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">condition</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token function">something</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token function">recover</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Statements"><a href="#Statements" class="headerlink" title="Statements"></a>Statements</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  statements<span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>  statements<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">ExceptionClass</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">switch</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">case</span> ABC<span class="token operator">:</span>    statements<span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">case</span> DEF<span class="token operator">:</span>    statements<span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">case</span> XYZ<span class="token operator">:</span>    statements<span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span>  <span class="token keyword">default</span><span class="token operator">:</span>    statements<span class="token punctuation">;</span>    <span class="token keyword">break</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>initialization<span class="token punctuation">;</span> condition<span class="token punctuation">;</span> update<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">do</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span> <span class="token keyword">while</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Method-indentation"><a href="#Method-indentation" class="headerlink" title="Method indentation"></a>Method indentation</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Nicer, as the extra newline gives visual separation to the method body.</span><span class="token class-name">String</span> <span class="token function">downloadAnInternet</span><span class="token punctuation">(</span><span class="token class-name">Internet</span> internet<span class="token punctuation">,</span> <span class="token class-name">Tubes</span> tubes<span class="token punctuation">,</span> <span class="token class-name">Blogosphere</span> blogs<span class="token punctuation">,</span>    <span class="token class-name">Amount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Data</span><span class="token punctuation">></span></span> bandwidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  tubes<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>internet<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token comment">// Also acceptable, but may be awkward depending on the column depth of the opening parenthesis.</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">downloadAnInternet</span><span class="token punctuation">(</span><span class="token class-name">Internet</span> internet<span class="token punctuation">,</span>                                 <span class="token class-name">Tubes</span> tubes<span class="token punctuation">,</span>                                 <span class="token class-name">Blogosphere</span> blogs<span class="token punctuation">,</span>                                 <span class="token class-name">Amount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Data</span><span class="token punctuation">></span></span> bandwidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  tubes<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>internet<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token comment">// Preferred for easy scanning and extra column space.</span><span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">downloadAnInternet</span><span class="token punctuation">(</span>    <span class="token class-name">Internet</span> internet<span class="token punctuation">,</span>    <span class="token class-name">Tubes</span> tubes<span class="token punctuation">,</span>    <span class="token class-name">Blogosphere</span> blogs<span class="token punctuation">,</span>    <span class="token class-name">Amount</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Long</span><span class="token punctuation">,</span> <span class="token class-name">Data</span><span class="token punctuation">></span></span> bandwidth<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  tubes<span class="token punctuation">.</span><span class="token function">download</span><span class="token punctuation">(</span>internet<span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Line-Length"><a href="#Line-Length" class="headerlink" title="Line Length"></a>Line Length</h3><p>避免單行程式碼超過 80 個字，因為很多 terminal 和 tool 沒辦法很好地處理它們。</p><h3 id="Wrapping-Lines"><a href="#Wrapping-Lines" class="headerlink" title="Wrapping Lines"></a>Wrapping Lines</h3><p>當 expression 無法完全塞在同一行時，依據以下原則進行切割。</p><ul><li>Break after a comma.</li><li>Break before an operator.</li><li>Prefer higher-level breaks to lower-level breaks.</li><li>Align the new line with the beginning of the expression at the same level on the previous<br>line.</li><li>If the above rules lead to confusing code or to code that’s squished up against the right margin, just indent 8 spaces instead.</li></ul><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token function">function</span><span class="token punctuation">(</span>longExpression1<span class="token punctuation">,</span> longExpression2<span class="token punctuation">,</span> longExpression3<span class="token punctuation">,</span>         longExpression4<span class="token punctuation">,</span> longExpression5<span class="token punctuation">)</span><span class="token punctuation">;</span>         <span class="token keyword">var</span> <span class="token operator">=</span> <span class="token function">function1</span><span class="token punctuation">(</span>longExpression1<span class="token punctuation">,</span>                <span class="token function">function2</span><span class="token punctuation">(</span>longExpression2<span class="token punctuation">,</span>                          longExpression3<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                          <span class="token comment">// Prefer</span>longName1 <span class="token operator">=</span> longName2 <span class="token operator">*</span> <span class="token punctuation">(</span>longName3 <span class="token operator">+</span> longName4 <span class="token operator">-</span> longName5<span class="token punctuation">)</span>            <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> longname6<span class="token punctuation">;</span> <span class="token comment">// Avoid</span>longName1 <span class="token operator">=</span> longName2 <span class="token operator">*</span> <span class="token punctuation">(</span>longName3 <span class="token operator">+</span> longName4                         <span class="token operator">-</span> longName5<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">4</span> <span class="token operator">*</span> longname6<span class="token punctuation">;</span><span class="token comment">// Convention Indentation</span><span class="token function">someMethod</span><span class="token punctuation">(</span><span class="token keyword">int</span> anArg<span class="token punctuation">,</span> <span class="token class-name">Object</span> anotherArg<span class="token punctuation">,</span> <span class="token class-name">String</span> yetAnotherArg<span class="token punctuation">,</span>           <span class="token class-name">Object</span> andStillAnother<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token comment">// Indent 8 spaces to avoid very deep indents</span><span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">synchronized</span> <span class="token function">horkingLongMethodName</span><span class="token punctuation">(</span><span class="token keyword">int</span> anArg<span class="token punctuation">,</span>        <span class="token class-name">Object</span> anotherArg<span class="token punctuation">,</span> <span class="token class-name">String</span> yetAnotherArg<span class="token punctuation">,</span>        <span class="token class-name">Object</span> andStillAnother<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>   <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token comment">// Don't use this indentation</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>condition1 <span class="token operator">&amp;&amp;</span> condition2<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span>condition3 <span class="token operator">&amp;&amp;</span> condition4<span class="token punctuation">)</span><span class="token operator">||</span><span class="token operator">!</span><span class="token punctuation">(</span>condition5 <span class="token operator">&amp;&amp;</span> condition6<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//Bad Wraps</span>    <span class="token function">doSomethingAboutIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//Make this line easy to miss</span><span class="token punctuation">&#125;</span><span class="token comment">// Use this Indentation instead</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>condition1 <span class="token operator">&amp;&amp;</span> condition2<span class="token punctuation">)</span><span class="token operator">||</span> <span class="token punctuation">(</span>condition3 <span class="token operator">&amp;&amp;</span> condition4<span class="token punctuation">)</span><span class="token operator">||</span><span class="token operator">!</span><span class="token punctuation">(</span>condition5 <span class="token operator">&amp;&amp;</span> condition6<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">doSomethingAboutIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Or use this</span><span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>condition1 <span class="token operator">&amp;&amp;</span> condition2<span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token punctuation">(</span>condition3 <span class="token operator">&amp;&amp;</span> condition4<span class="token punctuation">)</span>        <span class="token operator">||</span><span class="token operator">!</span><span class="token punctuation">(</span>condition5 <span class="token operator">&amp;&amp;</span> condition6<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token function">doSomethingAboutIt</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// All can use</span>alpha <span class="token operator">=</span> <span class="token punctuation">(</span>aLongBooleanExpression<span class="token punctuation">)</span> <span class="token operator">?</span> beta <span class="token operator">:</span> gamma<span class="token punctuation">;</span>alpha <span class="token operator">=</span> <span class="token punctuation">(</span>aLongBooleanExpression<span class="token punctuation">)</span> <span class="token operator">?</span> beta                                 <span class="token operator">:</span> gamma<span class="token punctuation">;</span>alpha <span class="token operator">=</span> <span class="token punctuation">(</span>aLongBooleanExpression<span class="token punctuation">)</span>        <span class="token operator">?</span> beta        <span class="token operator">:</span> gamma<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="White-Space"><a href="#White-Space" class="headerlink" title="White Space"></a>White Space</h2><h3 id="Blank-Lines"><a href="#Blank-Lines" class="headerlink" title="Blank Lines"></a>Blank Lines</h3><h4 id="一個空行應用場景："><a href="#一個空行應用場景：" class="headerlink" title="一個空行應用場景："></a>一個空行應用場景：</h4><ul><li>Between methods</li><li>Between the local variables in a method and its first statement</li><li>Before a block or single-line comment</li><li>Between logical sections inside a method to improve readability</li></ul><h4 id="兩個空行應用場景："><a href="#兩個空行應用場景：" class="headerlink" title="兩個空行應用場景："></a>兩個空行應用場景：</h4><ul><li>Between sections of a source file</li><li>Between class and interface definitions</li></ul><h3 id="Blank-Space"><a href="#Blank-Space" class="headerlink" title="Blank Space"></a>Blank Space</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">while</span> <span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>a <span class="token operator">+=</span> c <span class="token operator">+</span> d<span class="token punctuation">;</span>a <span class="token operator">=</span> <span class="token punctuation">(</span>a <span class="token operator">+</span> b<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token punctuation">(</span>c <span class="token operator">*</span> d<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">while</span> <span class="token punctuation">(</span>d<span class="token operator">++</span> <span class="token operator">=</span> s<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    n<span class="token operator">++</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token function">prints</span><span class="token punctuation">(</span><span class="token string">"size is "</span> <span class="token operator">+</span> foo <span class="token operator">+</span> <span class="token string">"\n"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token punctuation">(</span>expr1<span class="token punctuation">;</span> expr2<span class="token punctuation">;</span> expr3<span class="token punctuation">)</span><span class="token function">myMethod</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token keyword">int</span><span class="token punctuation">)</span> <span class="token number">1.000</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Comments"><a href="#Comments" class="headerlink" title="Comments"></a>Comments</h2><h3 id="Block-Comments"><a href="#Block-Comments" class="headerlink" title="Block Comments"></a>Block Comments</h3><p>Block comment 是用來描述 <code>file</code>、<code>method</code>、<code>data structures</code> 和 <code>algorithm</code> 的註解方式。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* * Here is a block comment with some very special * formatting that I want indent(1) to ignore. * * one * two * three */</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Single-Line-Comments"><a href="#Single-Line-Comments" class="headerlink" title="Single-Line Comments"></a>Single-Line Comments</h3><p>如果單行的註解無法表示全部，則應該用上面的 block comment。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>condition<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* Handle the condition. */</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Trailing-Comments"><a href="#Trailing-Comments" class="headerlink" title="Trailing Comments"></a>Trailing Comments</h3><p>非常短的註解，可以放置程式碼後面，但它們必須與程式碼之間有一定的距離。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>a <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> TRUE<span class="token punctuation">;</span>          <span class="token comment">/* special case */</span><span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> <span class="token function">isprime</span><span class="token punctuation">(</span>a<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">/* works only for odd a */</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="End-Of-Line-Comments"><a href="#End-Of-Line-Comments" class="headerlink" title="End-Of-Line Comments"></a>End-Of-Line Comments</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">if</span> <span class="token punctuation">(</span>foo <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">// Do a double-flip.</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span> <span class="token comment">// Explain why here.</span><span class="token comment">//if (bar > 1) &#123;</span><span class="token comment">//</span><span class="token comment">//     // Do a triple-flip.</span><span class="token comment">//     ...</span><span class="token comment">//&#125;</span><span class="token comment">//else</span><span class="token comment">// return false;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Documentation-Comments"><a href="#Documentation-Comments" class="headerlink" title="Documentation Comments"></a>Documentation Comments</h3><p>用來描述 Java 的 <code>class</code>、<code>interface</code>、<code>constructor</code>, <code>methods</code> 和 <code>fields</code> 常用的 tag 包含<code>@return</code>、<code>@param</code>、<code>@see</code>。</p><p>特別注意，Documentation Comments 是用來描述參數的輸入與輸出和一些基本事項，詳細的實現方法與細節，應使用上面的註解方式。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** The Example class provides ...*/</span><span class="token keyword">class</span> <span class="token class-name">Example</span> <span class="token punctuation">&#123;</span> <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Don’t-document-overriding-methods-usually"><a href="#Don’t-document-overriding-methods-usually" class="headerlink" title="Don’t document overriding methods (usually)"></a>Don’t document overriding methods (usually)</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">interface</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Gets the installed version of the database.   *   * @return The database version identifier.   */</span>  <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Bad.</span><span class="token comment">//   - Overriding method doc doesn't add anything.</span><span class="token keyword">class</span> <span class="token class-name">PostgresDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Gets the installed version of the database.   *   * @return The database version identifier.   */</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Good.</span><span class="token keyword">class</span> <span class="token class-name">PostgresDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Great.</span><span class="token comment">//   - The doc explains how it differs from or adds to the interface doc.</span><span class="token keyword">class</span> <span class="token class-name">TwitterDatabase</span> <span class="token keyword">implements</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token comment">/**   * Semantic version number.   *   * @return The database version in semver format.   */</span>  <span class="token annotation punctuation">@Override</span>  <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getVersion</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Declarations"><a href="#Declarations" class="headerlink" title="Declarations"></a>Declarations</h2><p>宣告變數時，請使用多行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Bad</span><span class="token keyword">int</span> level<span class="token punctuation">,</span> size<span class="token punctuation">;</span><span class="token comment">// Good</span><span class="token keyword">int</span> level<span class="token punctuation">;</span><span class="token keyword">int</span> size<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Initialization"><a href="#Initialization" class="headerlink" title="Initialization"></a>Initialization</h3><p>在賦予 value 之前，要事先宣告 local variable。不用宣告的情況只有該 local variable 是接受一個計算回來的 value 的時候。</p><h3 id="Class-and-Interface-Declarations-1"><a href="#Class-and-Interface-Declarations-1" class="headerlink" title="Class and Interface Declarations"></a>Class and Interface Declarations</h3><p>宣告 class 或 interface 時，<code>&#123;</code> 要在同一行。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Sample</span> <span class="token keyword">extends</span> <span class="token class-name">Object</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> ivar1<span class="token punctuation">;</span>    <span class="token keyword">int</span> ivar2<span class="token punctuation">;</span>        <span class="token class-name">Sample</span><span class="token punctuation">(</span><span class="token keyword">int</span> i<span class="token punctuation">,</span> <span class="token keyword">int</span> j<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        ivar1 <span class="token operator">=</span> i<span class="token punctuation">;</span>        ivar2 <span class="token operator">=</span> j<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>        <span class="token keyword">int</span> <span class="token function">emptyMethod</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Use-general-types"><a href="#Use-general-types" class="headerlink" title="Use general types"></a>Use general types</h3><p>當在定義 <code>method</code> 時，可以的話盡量使用更普遍的介面或類別來實現，這樣可以避免被綁定在特定類別之下，而無法置換的問題。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Bad.</span><span class="token comment">//   - Implementations of Database must match the ArrayList return type.</span><span class="token comment">//   - Changing return type to Set&lt;User> or List&lt;User> could break implementations and users.</span><span class="token keyword">interface</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Good.</span><span class="token comment">//   - Iterable defines the minimal functionality required of the return.</span><span class="token keyword">interface</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">Iterable</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">User</span><span class="token punctuation">></span></span> <span class="token function">fetchUsers</span><span class="token punctuation">(</span><span class="token class-name">String</span> query<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Avoid-mutable-static-state"><a href="#Avoid-mutable-static-state" class="headerlink" title="Avoid mutable static state"></a>Avoid mutable static state</h3><p>靜態且可修改的變數，不應該存在。如果真的存在，那也是用在測試的時候。</p><h2 id="Annotation"><a href="#Annotation" class="headerlink" title="Annotation"></a>Annotation</h2><h3 id="Nullable"><a href="#Nullable" class="headerlink" title="@Nullable"></a>@Nullable</h3><p>當一個 <code>parameter</code>、<code>method return value</code> 是 null 時，應該加上 <code>@Nullable</code> 的標註。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">class</span> <span class="token class-name">Database</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Nullable</span> <span class="token keyword">private</span> <span class="token class-name">Connection</span> connection<span class="token punctuation">;</span>  <span class="token annotation punctuation">@Nullable</span>  <span class="token class-name">Connection</span> <span class="token function">getConnection</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">return</span> connection<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">void</span> <span class="token function">setConnection</span><span class="token punctuation">(</span><span class="token annotation punctuation">@Nullable</span> <span class="token class-name">Connection</span> connection<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">this</span><span class="token punctuation">.</span>connection <span class="token operator">=</span> connection<span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="VisibleForTesting"><a href="#VisibleForTesting" class="headerlink" title="@VisibleForTesting"></a>@VisibleForTesting</h3><p>在測試時，為了覆蓋率而允許訪問 <code>private</code> 變數。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Bad.</span><span class="token comment">//   - Any adjustments to field names need to be duplicated in the test.</span><span class="token keyword">class</span> <span class="token class-name">ConfigReader</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> USER_FIELD <span class="token operator">=</span> <span class="token string">"user"</span><span class="token punctuation">;</span>  <span class="token class-name">Config</span> <span class="token function">parseConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span> configData<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigReaderTest</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testParseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedConfig<span class="token punctuation">,</span> reader<span class="token punctuation">.</span><span class="token function">parseConfig</span><span class="token punctuation">(</span><span class="token string">"&#123;user: bob&#125;"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token comment">// Good.</span><span class="token comment">//   - The test borrows directly from the same constant.</span><span class="token keyword">class</span> <span class="token class-name">ConfigReader</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@VisibleForTesting</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span> USER_FIELD <span class="token operator">=</span> <span class="token string">"user"</span><span class="token punctuation">;</span>  <span class="token class-name">Config</span> <span class="token function">parseConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span> configData<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ConfigReaderTest</span> <span class="token punctuation">&#123;</span>  <span class="token annotation punctuation">@Test</span>  <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">testParseConfig</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>    <span class="token function">assertEquals</span><span class="token punctuation">(</span>expectedConfig<span class="token punctuation">,</span>        reader<span class="token punctuation">.</span><span class="token function">parseConfig</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">"&#123;%s: bob&#125;"</span><span class="token punctuation">,</span> <span class="token class-name">ConfigReader</span><span class="token punctuation">.</span>USER_FIELD<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Exception"><a href="#Exception" class="headerlink" title="Exception"></a>Exception</h2><p>永遠不要忽略 <code>Exception</code>，同時要宣告該類別會產生的特定 <code>Exception</code>。</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Bad.</span><span class="token comment">//   - If a RuntimeException happens, the program continues rather than aborting.</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  storage<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  LOG<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to insert user."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token keyword">try</span> <span class="token punctuation">&#123;</span>  storage<span class="token punctuation">.</span><span class="token function">insertUser</span><span class="token punctuation">(</span>user<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">StorageException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  LOG<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"Failed to insert user."</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="Throw-appropriate-exception-types"><a href="#Throw-appropriate-exception-types" class="headerlink" title="Throw appropriate exception types"></a>Throw appropriate exception types</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// Bad.</span><span class="token comment">//   - Caller is forced to catch Exception, trapping many unnecessary types of issues.</span><span class="token keyword">interface</span> <span class="token class-name">DataStore</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">String</span> <span class="token function">fetchValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Better.</span><span class="token comment">// The interface leaks details about one specific implementation.</span><span class="token keyword">interface</span> <span class="token class-name">DataStore</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">String</span> <span class="token function">fetchValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">SQLException</span><span class="token punctuation">,</span> <span class="token class-name">UnknownHostException</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token comment">// Good.</span><span class="token comment">// A custom exception type insulates the user from the implementation.</span><span class="token comment">// Different implementations aren't forced to abuse irrelevant exception types.</span><span class="token keyword">interface</span> <span class="token class-name">DataStore</span> <span class="token punctuation">&#123;</span>  <span class="token class-name">String</span> <span class="token function">fetchValue</span><span class="token punctuation">(</span><span class="token class-name">String</span> key<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">StorageException</span><span class="token punctuation">;</span>  <span class="token keyword">static</span> <span class="token keyword">class</span> <span class="token class-name">StorageException</span> <span class="token keyword">extends</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>    <span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span>  <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Code-Examples"><a href="#Code-Examples" class="headerlink" title="Code Examples"></a>Code Examples</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/* * %W% %E% Firstname Lastname * * Copyright (c) 1993-1996 Sun Microsystems, Inc. All Rights Reserved. * * This software is the confidential and proprietary information of Sun * Microsystems, Inc. ("Confidential Information"). You shall not * disclose such Confidential Information and shall use it only in * accordance with the terms of the license agreement you entered into * with Sun. * * SUN MAKES NO REPRESENTATIONS OR WARRANTIES ABOUT THE SUITABILITY OF * THE SOFTWARE, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED * TO THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A * PARTICULAR PURPOSE, OR NON-INFRINGEMENT. SUN SHALL NOT BE LIABLE FOR * ANY DAMAGES SUFFERED BY LICENSEE AS A RESULT OF USING, MODIFYING OR * DISTRIBUTING THIS SOFTWARE OR ITS DERIVATIVES. */</span><span class="token keyword">package</span> <span class="token namespace">java<span class="token punctuation">.</span>blah</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>blah<span class="token punctuation">.</span>blahdy<span class="token punctuation">.</span></span><span class="token class-name">BlahBlah</span><span class="token punctuation">;</span><span class="token comment">/** * Class description goes here. * * @version 1.10 04 Oct 1996 * @author Firstname Lastname */</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Blah</span> <span class="token keyword">extends</span> <span class="token class-name">SomeClass</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* A class implementation comment can go here. */</span>        <span class="token comment">/** classVar1 documentation comment */</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> classVar1<span class="token punctuation">;</span>        <span class="token comment">/**     * classVar2 documentation comment that happens to be     * more than one line long     */</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Object</span> classVar2<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar1 documentation comment */</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> instanceVar1<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar2 documentation comment */</span>    <span class="token keyword">protected</span> <span class="token keyword">int</span> instanceVar2<span class="token punctuation">;</span>        <span class="token comment">/** instanceVar3 documentation comment */</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span><span class="token punctuation">[</span><span class="token punctuation">]</span> instanceVar3<span class="token punctuation">;</span>    <span class="token comment">/**     * ...method Blah documentation comment...     */</span>    <span class="token keyword">public</span> <span class="token class-name">Blah</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * ...method doSomething documentation comment...     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomething</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span>        <span class="token comment">/**     * ...method doSomethingElse documentation comment...     * @param someParam description     */</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">doSomethingElse</span><span class="token punctuation">(</span><span class="token class-name">Object</span> someParam<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// ...implementation goes here...</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="Reference"><a href="#Reference" class="headerlink" title="Reference"></a>Reference</h2><ol><li><a href="https://www.oracle.com/technetwork/java/codeconventions-150003.pdf">Java Code Conventions</a></li><li><a href="https://google.github.io/styleguide/javaguide.html">Google Java Style Guide</a></li><li><a href="https://github.com/twitter-archive/commons/blob/master/src/java/com/twitter/common/styleguide.md">Twitter Java Style Guide</a></li></ol>]]></content>
      
      
      <categories>
          
          <category> Java </category>
          
          <category> 基礎 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> Coding Style </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 筆記</title>
      <link href="/%E5%89%8D%E7%AB%AF/froent-end/CSS%20%E7%AD%86%E8%A8%98/"/>
      <url>/%E5%89%8D%E7%AB%AF/froent-end/CSS%20%E7%AD%86%E8%A8%98/</url>
      
        <content type="html"><![CDATA[<h2 id="Multiple-Style-Sheets-順序"><a href="#Multiple-Style-Sheets-順序" class="headerlink" title="Multiple Style Sheets 順序"></a>Multiple Style Sheets 順序</h2><ol><li>Inline style</li><li>Internal style sheet</li><li>External style sheet</li></ol><h2 id="Selector-順序"><a href="#Selector-順序" class="headerlink" title="Selector 順序"></a>Selector 順序</h2><ol><li>inline CSS </li><li>id selector</li><li>class selector = pesudo-class = attribute selectors</li><li>element selector = pesudo-element</li></ol><h2 id="CSS-邊界組成"><a href="#CSS-邊界組成" class="headerlink" title="CSS 邊界組成"></a>CSS 邊界組成</h2><p><img src="https://i.imgur.com/I2nb20i.png"></p><p>Component 總長寬，是由上述四個元素加起來成立。平常在設定 CSS 的長寬時，設定的只有 content 的部分。</p><h2 id="Margin-Collapse"><a href="#Margin-Collapse" class="headerlink" title="Margin Collapse"></a>Margin Collapse</h2><p>Margin top 和 bottom 數值較大的會吃掉數值較小的。</p><h2 id="em-amp-rem"><a href="#em-amp-rem" class="headerlink" title="em &amp; rem"></a>em &amp; rem</h2><ul><li><code>em</code>: 適合用在 <code>font-size</code></li><li><code>rem</code>: 適合用在 <code>margin</code> 和 <code>padding</code></li></ul><h2 id="ch"><a href="#ch" class="headerlink" title="ch"></a>ch</h2><blockquote><p>anything from 45 to 75 characters is widely regarded as a satisfactory length of line for a single-column page set in a serifed text face in a text size</p></blockquote><pre class="line-numbers language-css" data-language="css"><code class="language-css"><span class="token property">width</span><span class="token punctuation">:</span> <span class="token function">clamp</span><span class="token punctuation">(</span>45ch<span class="token punctuation">,</span> 50%<span class="token punctuation">,</span> 75ch<span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSS </tag>
            
            <tag> HTML &amp; CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/uncategorized/Comment%20Tag/"/>
      <url>/uncategorized/Comment%20Tag/</url>
      
        <content type="html"><![CDATA[<h1 id="Comment-Tag"><a href="#Comment-Tag" class="headerlink" title="Comment Tag"></a>Comment Tag</h1><h6 id="tags-document-example"><a href="#tags-document-example" class="headerlink" title="tags: document example"></a>tags: <code>document example</code></h6><ul><li><code>TODO</code>: 用來標記之後應被加入的未實現功能。</li><li><code>FIXME</code>: 用來標記一個需要修復的程式碼。</li><li><code>OPTIMIZE</code>: 用來標記可能影響效能的緩慢或效率低落的程式碼。</li><li><code>HACK</code>: 用來標記程式碼異味，其中包含了可疑的程式碼實現以及它應該需要被重構。</li><li><code>REVIEW</code>: 用來標記任何需要審視及確認正常動作的地方。舉例來說：<code>REVIEW</code>: 我們確定用戶現在是這麼做的嗎？ </li></ul><h2 id="使用範例"><a href="#使用範例" class="headerlink" title="使用範例"></a>使用範例</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// TODO(treebo Lee): do someting</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/uncategorized/hello-world/"/>
      <url>/uncategorized/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo server<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo generate<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">$ hexo deploy<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">function</span> <span class="token function">$initHighlight</span><span class="token punctuation">(</span><span class="token parameter">block<span class="token punctuation">,</span> cls</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>  <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span>cls<span class="token punctuation">.</span><span class="token function">search</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\bno\-highlight\b</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>      <span class="token keyword">return</span> <span class="token function">process</span><span class="token punctuation">(</span>block<span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token number">0x0F</span><span class="token punctuation">)</span> <span class="token operator">+</span>             <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token string"> class="</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>cls<span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string">"</span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/* handle exception */</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span> <span class="token operator">/</span> <span class="token number">2</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> classes<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">checkCondition</span><span class="token punctuation">(</span>classes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">===</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span>      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">'undefined'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token punctuation">&#125;</span>  <span class="token keyword">return</span> <span class="token punctuation">(</span>    <span class="token operator">&lt;</span>div<span class="token operator">></span>      <span class="token operator">&lt;</span>web<span class="token operator">-</span>component<span class="token operator">></span><span class="token punctuation">&#123;</span>block<span class="token punctuation">&#125;</span><span class="token operator">&lt;</span><span class="token operator">/</span>web<span class="token operator">-</span>component<span class="token operator">></span>    <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span>  <span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token keyword">export</span> $initHighlight<span class="token punctuation">;</span>作者<span class="token operator">:</span> Jerry連結<span class="token operator">:</span> https<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>butterfly<span class="token punctuation">.</span>js<span class="token punctuation">.</span>org<span class="token operator">/</span>posts<span class="token operator">/</span><span class="token number">9</span>db656e5<span class="token operator">/</span>來源<span class="token operator">:</span> Butterfly著作權歸作者所有。商業轉載請聯絡作者獲得授權，非商業轉載請註明出處。<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-javascript" data-language="javascript"><code class="language-javascript"><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">numberWithCommas</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">x <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">(</span>x <span class="token operator">&amp;&amp;</span> x<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">\B(?=(\d&#123;3&#125;)+(?!\d))</span><span class="token regex-delimiter">/</span><span class="token regex-flags">g</span></span><span class="token punctuation">,</span> <span class="token string">','</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">||</span> <span class="token string">'0'</span><span class="token punctuation">;</span><span class="token keyword">const</span> roleIdMapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token number">1</span><span class="token operator">:</span> <span class="token string">'Administrator'</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token operator">:</span> <span class="token string">'Director'</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token operator">:</span> <span class="token string">'Manager'</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token operator">:</span> <span class="token string">'Advisor'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> testIdMapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token number">1</span><span class="token operator">:</span> <span class="token string">'IELTS UKVI Academic'</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token operator">:</span> <span class="token string">'IELTS Non-UKVI Academic'</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token operator">:</span> <span class="token string">'IELTS General Training'</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token operator">:</span> <span class="token string">'TOEFL ibt'</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token operator">:</span> <span class="token string">'Ukiset'</span><span class="token punctuation">,</span>  <span class="token number">6</span><span class="token operator">:</span> <span class="token string">'Other'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> orderStatusMapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token number">0</span><span class="token operator">:</span> <span class="token string">'草稿'</span><span class="token punctuation">,</span>  <span class="token number">1</span><span class="token operator">:</span> <span class="token string">'准备中'</span><span class="token punctuation">,</span>  <span class="token number">2</span><span class="token operator">:</span> <span class="token string">'已寄发'</span><span class="token punctuation">,</span>  <span class="token number">3</span><span class="token operator">:</span> <span class="token string">'已取消'</span><span class="token punctuation">,</span>  <span class="token number">4</span><span class="token operator">:</span> <span class="token string">'准备中'</span><span class="token punctuation">,</span>  <span class="token number">5</span><span class="token operator">:</span> <span class="token string">'准备中'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">const</span> preferredChoiceMapping <span class="token operator">=</span> <span class="token punctuation">&#123;</span>  <span class="token constant">OVERALL_RANKING</span><span class="token operator">:</span> <span class="token string">'学校排名'</span><span class="token punctuation">,</span>  <span class="token constant">SCHOOL_LOCATION</span><span class="token operator">:</span> <span class="token string">'学校地理位置'</span><span class="token punctuation">,</span>  <span class="token constant">INTEREST_EXPERTISE</span><span class="token operator">:</span> <span class="token string">'兴趣专长'</span><span class="token punctuation">,</span>  <span class="token constant">INTERNATIONAL_PUPIL_PERCENTAGE</span><span class="token operator">:</span> <span class="token string">'国际生比例'</span><span class="token punctuation">,</span>  <span class="token constant">SCHOOL_FEE</span><span class="token operator">:</span> <span class="token string">'留学花费'</span><span class="token punctuation">,</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">roleNameParser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">roleId <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> roleIdMapping<span class="token punctuation">[</span>roleId<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">testNameParser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">testId <span class="token operator">=</span> <span class="token number">1</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> testIdMapping<span class="token punctuation">[</span>testId<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">formatBytes</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">bytes<span class="token punctuation">,</span> decimals <span class="token operator">=</span> <span class="token number">2</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">&#123;</span>  <span class="token keyword">if</span> <span class="token punctuation">(</span>bytes <span class="token operator">===</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string">'0 Bytes'</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> k <span class="token operator">=</span> <span class="token number">1024</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> dm <span class="token operator">=</span> decimals <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token operator">?</span> <span class="token number">0</span> <span class="token operator">:</span> decimals<span class="token punctuation">;</span>  <span class="token keyword">const</span> sizes <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Bytes'</span><span class="token punctuation">,</span> <span class="token string">'KB'</span><span class="token punctuation">,</span> <span class="token string">'MB'</span><span class="token punctuation">,</span> <span class="token string">'GB'</span><span class="token punctuation">,</span> <span class="token string">'TB'</span><span class="token punctuation">,</span> <span class="token string">'PB'</span><span class="token punctuation">,</span> <span class="token string">'EB'</span><span class="token punctuation">,</span> <span class="token string">'ZB'</span><span class="token punctuation">,</span> <span class="token string">'YB'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>  <span class="token keyword">const</span> i <span class="token operator">=</span> Math<span class="token punctuation">.</span><span class="token function">floor</span><span class="token punctuation">(</span>Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>bytes<span class="token punctuation">)</span> <span class="token operator">/</span> Math<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">`</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span><span class="token function">parseFloat</span><span class="token punctuation">(</span><span class="token punctuation">(</span>bytes <span class="token operator">/</span> k <span class="token operator">**</span> i<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toFixed</span><span class="token punctuation">(</span>dm<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token string"> </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">$&#123;</span>sizes<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token interpolation-punctuation punctuation">&#125;</span></span><span class="token template-punctuation string">`</span></span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">orderStatusParser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> orderStatusMapping<span class="token punctuation">[</span>status<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">preferredChoiceParser</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token parameter">status <span class="token operator">=</span> <span class="token number">0</span></span><span class="token punctuation">)</span> <span class="token operator">=></span> preferredChoiceMapping<span class="token punctuation">[</span>status<span class="token punctuation">]</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>stream<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">ArrayList</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span>function<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>chrono<span class="token punctuation">.</span></span><span class="token class-name">IsoChronology</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">LocalDate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span>temporal<span class="token punctuation">.</span></span><span class="token class-name">ChronoUnit</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>time<span class="token punctuation">.</span></span><span class="token class-name">Period</span><span class="token punctuation">;</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Test</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// List&lt;Person> roster = Person.createRoster();</span>        <span class="token comment">// Person.printPersons(</span>        <span class="token comment">//     roster,</span>        <span class="token comment">//     p -> &#123;</span>        <span class="token comment">//         return (p.getGender() == Person.Sex.MALE)</span>        <span class="token comment">//                             &amp;&amp; (p.getAge() >= 18)</span>        <span class="token comment">//                             &amp;&amp; (p.getAge() >= 25);</span>        <span class="token comment">//     &#125;,</span>        <span class="token comment">//     p -> p.getEmailAddress(),</span>        <span class="token comment">//     email -> System.out.println(email)</span>        <span class="token comment">// );</span>        <span class="token comment">// for (Person p: roster) &#123;</span>        <span class="token comment">//     p.printPerson();</span>        <span class="token comment">// &#125;</span>        <span class="token comment">// Integer[] intArray = &#123;1, 2, 3, 4, 5, 6, 7, 8 &#125;;</span>        <span class="token comment">// List&lt;Integer> listOfIntegers = new ArrayList&lt;>(Arrays.asList(intArray));</span>        <span class="token comment">// List&lt;Integer> c = listOfIntegers</span>        <span class="token comment">//                     .stream()</span>        <span class="token comment">//                     .filter(p -> p % 2 == 0)</span>        <span class="token comment">//                     .collect(Collectors.toList());</span>        <span class="token comment">// c.forEach(System.out::println);</span>        <span class="token keyword">final</span> <span class="token keyword">int</span><span class="token punctuation">[</span><span class="token punctuation">]</span> x <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">5</span><span class="token punctuation">;</span>        x<span class="token punctuation">.</span><span class="token function">x</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">print</span><span class="token punctuation">(</span>x<span class="token punctuation">[</span><span class="token number">2</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token keyword">class</span> <span class="token class-name">Person</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">printPersons</span><span class="token punctuation">(</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> roster<span class="token punctuation">,</span>        <span class="token class-name">Predicate</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> tester<span class="token punctuation">,</span>        <span class="token class-name">Function</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">></span></span> mapper<span class="token punctuation">,</span>        <span class="token class-name">Consumer</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> block    <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">Person</span> p <span class="token operator">:</span> roster<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>tester<span class="token punctuation">.</span><span class="token function">test</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">String</span> data <span class="token operator">=</span> mapper<span class="token punctuation">.</span><span class="token function">apply</span><span class="token punctuation">(</span>p<span class="token punctuation">)</span><span class="token punctuation">;</span>                block<span class="token punctuation">.</span><span class="token function">accept</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>x<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">enum</span> <span class="token class-name">Sex</span> <span class="token punctuation">&#123;</span>        MALE<span class="token punctuation">,</span> FEMALE    <span class="token punctuation">&#125;</span>    <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token class-name">LocalDate</span> birthday<span class="token punctuation">;</span>    <span class="token class-name">Sex</span> gender<span class="token punctuation">;</span>    <span class="token class-name">String</span> emailAddress<span class="token punctuation">;</span>    <span class="token class-name">Person</span><span class="token punctuation">(</span><span class="token class-name">String</span> nameArg<span class="token punctuation">,</span> <span class="token class-name">LocalDate</span> birthdayArg<span class="token punctuation">,</span> <span class="token class-name">Sex</span> genderArg<span class="token punctuation">,</span> <span class="token class-name">String</span> emailArg<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        name <span class="token operator">=</span> nameArg<span class="token punctuation">;</span>        birthday <span class="token operator">=</span> birthdayArg<span class="token punctuation">;</span>        gender <span class="token operator">=</span> genderArg<span class="token punctuation">;</span>        emailAddress <span class="token operator">=</span> emailArg<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> birthday            <span class="token punctuation">.</span><span class="token function">until</span><span class="token punctuation">(</span><span class="token class-name">IsoChronology</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">dateNow</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token punctuation">.</span><span class="token function">getYears</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">printPerson</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>      <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>name <span class="token operator">+</span> <span class="token string">", "</span> <span class="token operator">+</span> <span class="token keyword">this</span><span class="token punctuation">.</span><span class="token function">getAge</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Sex</span> <span class="token function">getGender</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> gender<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">setName</span><span class="token punctuation">(</span><span class="token class-name">String</span> name<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> name<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getEmailAddress</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> emailAddress<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">LocalDate</span> <span class="token function">getBirthday</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> birthday<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">int</span> <span class="token function">compareByAge</span><span class="token punctuation">(</span><span class="token class-name">Person</span> a<span class="token punctuation">,</span> <span class="token class-name">Person</span> b<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> a<span class="token punctuation">.</span>birthday<span class="token punctuation">.</span><span class="token function">compareTo</span><span class="token punctuation">(</span>b<span class="token punctuation">.</span>birthday<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> <span class="token function">createRoster</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Person</span><span class="token punctuation">></span></span> roster <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roster<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>            <span class="token string">"Fred"</span><span class="token punctuation">,</span>            <span class="token class-name">IsoChronology</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token number">1980</span><span class="token punctuation">,</span> <span class="token number">6</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE<span class="token punctuation">,</span>            <span class="token string">"fred@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roster<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>            <span class="token string">"Jane"</span><span class="token punctuation">,</span>            <span class="token class-name">IsoChronology</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token number">1990</span><span class="token punctuation">,</span> <span class="token number">7</span><span class="token punctuation">,</span> <span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>FEMALE<span class="token punctuation">,</span> <span class="token string">"jane@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roster<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>            <span class="token string">"George"</span><span class="token punctuation">,</span>            <span class="token class-name">IsoChronology</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token number">1991</span><span class="token punctuation">,</span> <span class="token number">8</span><span class="token punctuation">,</span> <span class="token number">13</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE<span class="token punctuation">,</span> <span class="token string">"george@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        roster<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>            <span class="token keyword">new</span> <span class="token class-name">Person</span><span class="token punctuation">(</span>            <span class="token string">"Bob"</span><span class="token punctuation">,</span>            <span class="token class-name">IsoChronology</span><span class="token punctuation">.</span>INSTANCE<span class="token punctuation">.</span><span class="token function">date</span><span class="token punctuation">(</span><span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">9</span><span class="token punctuation">,</span> <span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">,</span>            <span class="token class-name">Person<span class="token punctuation">.</span>Sex</span><span class="token punctuation">.</span>MALE<span class="token punctuation">,</span> <span class="token string">"bob@example.com"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> roster<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function-definition function">checkFavoriteSchoolList</span><span class="token punctuation">(</span><span class="token class-name type-declaration">Request</span> <span class="token variable">$request</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token variable">$validator</span> <span class="token operator">=</span> <span class="token class-name static-context">Validator</span><span class="token operator">::</span><span class="token function">make</span><span class="token punctuation">(</span><span class="token variable">$request</span><span class="token operator">-></span><span class="token function">all</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token punctuation">[</span>        <span class="token string single-quoted-string">'genderType'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'nullable|integer|between:0,1'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'preferredEntryAge'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'nullable|integer|between:7,17'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'boardingType'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'nullable|integer|between:0,2'</span><span class="token punctuation">,</span>        <span class="token string single-quoted-string">'customSchoolList'</span> <span class="token operator">=></span> <span class="token string single-quoted-string">'nullable|array'</span><span class="token punctuation">,</span>    <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">handleDefaultValidatorError</span><span class="token punctuation">(</span><span class="token variable">$validator</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$genderType</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'genderType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$preferredEntryAge</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'preferredEntryAge'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$boardingType</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'boardingType'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$customSchoolList</span> <span class="token operator">=</span> <span class="token variable">$request</span><span class="token operator">-></span><span class="token function">input</span><span class="token punctuation">(</span><span class="token string single-quoted-string">'customSchoolList'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token variable">$favoriteSchoolList</span> <span class="token operator">=</span> <span class="token constant">null</span><span class="token punctuation">;</span>    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$favoriteSchoolList</span> <span class="token operator">=</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token property">recommendSystemService</span><span class="token operator">-></span><span class="token function">checkFavoriteSchoolList</span><span class="token punctuation">(</span><span class="token variable">$genderType</span><span class="token punctuation">,</span> <span class="token variable">$preferredEntryAge</span><span class="token punctuation">,</span> <span class="token variable">$boardingType</span><span class="token punctuation">,</span> <span class="token variable">$customSchoolList</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name class-name-fully-qualified"><span class="token punctuation">\</span>Throwable</span> <span class="token variable">$th</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">throw</span> <span class="token variable">$th</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token variable">$this</span><span class="token operator">-></span><span class="token function">successformat</span><span class="token punctuation">(</span><span class="token variable">$favoriteSchoolList</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><pre class="line-numbers language-none"><code class="language-none">123public function checkFavoriteSchoolList(Request $request)&#123;    $validator &#x3D; Validator::make($request-&gt;all(), [        &#39;genderType&#39; &#x3D;&gt; &#39;nullable|integer|between:0,1&#39;,        &#39;preferredEntryAge&#39; &#x3D;&gt; &#39;nullable|integer|between:7,17&#39;,        &#39;boardingType&#39; &#x3D;&gt; &#39;nullable|integer|between:0,2&#39;,        &#39;customSchoolList&#39; &#x3D;&gt; &#39;nullable|array&#39;,    ]);    $this-&gt;handleDefaultValidatorError($validator);    $genderType &#x3D; $request-&gt;input(&#39;genderType&#39;);    $preferredEntryAge &#x3D; $request-&gt;input(&#39;preferredEntryAge&#39;);    $boardingType &#x3D; $request-&gt;input(&#39;boardingType&#39;);    $customSchoolList &#x3D; $request-&gt;input(&#39;customSchoolList&#39;);    $favoriteSchoolList &#x3D; null;    try &#123;        $favoriteSchoolList &#x3D; $this-&gt;recommendSystemService-&gt;checkFavoriteSchoolList($genderType, $preferredEntryAge, $boardingType, $customSchoolList);    &#125; catch (\Throwable $th) &#123;        throw $th;    &#125;    return $this-&gt;successformat($favoriteSchoolList);&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
